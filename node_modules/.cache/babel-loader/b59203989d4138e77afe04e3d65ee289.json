{"ast":null,"code":"var _jsxFileName = \"/home/flic/messengerfafront/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, IconButton, InputBase } from '@material-ui/core';\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Message from './Message';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { PermPhoneMsg, StarTwoTone } from '@material-ui/icons';\nimport SockJsClient from \"react-stomp\";\nimport client from 'react-stomp';\nimport { serverWebSocketUrl, topicsUrl } from '../URLs';\nimport ChatInput from '../forms/ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n\n  const useStyle = makeStyles(theme => ({\n    chat: {\n      flex: \"0.6\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      boxShadow: \"0 2px 4px grey\"\n    },\n    chat_header: {\n      height: \"60px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      background: \"#ff964c\",\n      boxShadow: \"0 2px 4px grey\"\n    },\n    chat_header_avatar: {\n      marginLeft: \"10px\",\n      border: \"2px solid #7f1e00\",\n      color: \"#d16519\",\n      background: \"#ffeecb\"\n    },\n    chat_header_name: {\n      marginLeft: \"10px\",\n      color: \"white\",\n      textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\"\n    },\n    chat_body: {\n      padding: \"30px 10px\",\n      overflowY: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"80%\"\n    },\n    chat_footer: {\n      display: \"flex\",\n      flex: \"1\",\n      height: \"7%\",\n      borderTop: \"2px solid grey\"\n    },\n    chat_input: {\n      height: \"60%\",\n      width: \"100%\",\n      border: \"none\",\n      marginLeft: \"10px\",\n      fontSize: \"20px\"\n    },\n    chat_form: {\n      display: \"flex\",\n      flex: \"1\",\n      height: \"100px\"\n    },\n    button: {\n      background: \"#ffab6f\",\n      width: \"50px\",\n      height: \"50px\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      marginLeft: \"5px\",\n      marginRight: \"5px\"\n    },\n    chat_exit: {\n      position: \"relative\",\n      alignSelf: \"right\"\n    }\n  }));\n  const classes = useStyle();\n  let [messageText, setMessageText] = useState(\"\");\n  let [messages, setMessages] = useState([]);\n  const [clientRef, setClientRef] = useState(null);\n\n  function sendMessage(messagetxt) {\n    if (messagetxt !== \"\") {\n      clientRef.sendMessage('/app/user-all', JSON.stringify({\n        message: messagetxt\n      }));\n      setMessageText(\"\");\n    }\n  }\n\n  function showMeOnline() {\n    clientRef.sendMessage('/app/online', JSON.stringify({\n      username: \"MARKO\"\n    }));\n  }\n\n  function handleOnChange(e) {\n    setMessageText(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chat,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_header,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.chat_header_avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chat_header_name,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ime i Prezime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_body,\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(Message, {\n        txt: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_footer,\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        setMessageText: setMessageText,\n        messageText: messageText,\n        sendMessage: sendMessage,\n        handleOnChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SockJsClient, {\n      url: serverWebSocketUrl,\n      topics: [topicsUrl, \"/topic/alo\"],\n      onConnect: () => {\n        console.log(\"Connected\"); //  clientRef.sendMessage('/app/user-all', JSON.stringify({  \n        //    message: \"online sam\"\n        //  }));\n      },\n      onDisconnect: () => {\n        console.log(\"Disconnected\");\n      },\n      onMessage: msg => {\n        setMessages([...messages, msg]);\n        console.log(msg);\n      },\n      ref: client => {\n        setClientRef(client);\n        console.log(\"evo ga klijent: \" + client);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"gDQn4Drq5QmwBdMUdbkDohiU5B0=\", true);\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/flic/messengerfafront/src/components/Chat.js"],"names":["React","useState","makeStyles","Avatar","IconButton","InputBase","SendIcon","Message","ExitToApp","PermPhoneMsg","StarTwoTone","SockJsClient","client","serverWebSocketUrl","topicsUrl","ChatInput","Chat","useStyle","theme","chat","flex","display","flexDirection","boxShadow","chat_header","height","alignItems","background","chat_header_avatar","marginLeft","border","color","chat_header_name","textShadow","chat_body","padding","overflowY","chat_footer","borderTop","chat_input","width","fontSize","chat_form","button","marginTop","marginBottom","marginRight","chat_exit","position","alignSelf","classes","messageText","setMessageText","messages","setMessages","clientRef","setClientRef","sendMessage","messagetxt","JSON","stringify","message","showMeOnline","username","handleOnChange","e","target","value","map","msg","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Avatar,IconButton,InputBase} from '@material-ui/core';\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Message from './Message';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { PermPhoneMsg, StarTwoTone } from '@material-ui/icons';\nimport SockJsClient from \"react-stomp\";\nimport client from 'react-stomp';\nimport { serverWebSocketUrl,topicsUrl } from '../URLs';\nimport ChatInput from '../forms/ChatInput';\n\nexport default function Chat()\n{\n    const useStyle = makeStyles((theme) =>({\n        chat:\n        {\n          flex:\"0.6\",\n          display:\"flex\",\n          flexDirection:\"column\",\n          boxShadow: \"0 2px 4px grey\",\n        },\n        chat_header:\n        {\n            height:\"60px\",\n            display:\"flex\",\n            alignItems:\"center\",\n            background:\"#ff964c\",\n            boxShadow: \"0 2px 4px grey\",\n        },\n        chat_header_avatar:\n        {\n            marginLeft:\"10px\",\n            border:\"2px solid #7f1e00\",\n            color:\"#d16519\",\n            background:\"#ffeecb\",\n        },\n        chat_header_name:\n        {\n            marginLeft:\"10px\",\n            color:\"white\",\n            textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\",\n        },\n        chat_body:\n        {\n            padding:\"30px 10px\",\n            overflowY:\"auto\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            height:\"80%\"\n\n        },\n        chat_footer:\n        {\n           display:\"flex\",\n           flex:\"1\",\n           height:\"7%\",\n           borderTop:\"2px solid grey\",\n        },\n        chat_input:\n        {\n            height:\"60%\",\n            width:\"100%\",\n            border:\"none\",\n            marginLeft:\"10px\",\n            fontSize:\"20px\",\n\n        },\n        chat_form:\n        {\n            display:\"flex\",\n            flex:\"1\",\n            height:\"100px\",\n        },\n        button:\n        {\n            background:\"#ffab6f\",\n            width:\"50px\",\n            height:\"50px\",\n            marginTop: \"5px\",\n            marginBottom: \"5px\",\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n        },\n        chat_exit:\n        {\n           position:\"relative\",\n           alignSelf:\"right\",\n        }\n    }));\n    const classes=useStyle();\n    let [messageText,setMessageText]=useState(\"\");\n    let [messages,setMessages]=useState([]);\n    const[clientRef,setClientRef]=useState(null);\n\n    function sendMessage(messagetxt)\n    {\n        if(messagetxt!==\"\")\n        {\n        clientRef.sendMessage('/app/user-all', JSON.stringify({  \n            message: messagetxt\n        }));\n        setMessageText(\"\");\n        }\n    }\n    function showMeOnline()\n    {\n        clientRef.sendMessage('/app/online',JSON.stringify({  \n            username: \"MARKO\"\n        }));\n     \n    }\n\n    function handleOnChange(e)\n    {\n        setMessageText(e.target.value);\n    }\n    return (\n        <div className={classes.chat}>\n            <div className={classes.chat_header}>\n            <Avatar className={classes.chat_header_avatar}/>\n            <div className={classes.chat_header_name}>\n                <h2>Ime i Prezime</h2>\n            </div>\n           \n            </div>\n            <div className={classes.chat_body}>\n            {\n            messages.map(msg=> <Message txt={msg}/>)\n            }\n            </div>\n            <div className={classes.chat_footer}> \n                <ChatInput setMessageText={setMessageText} messageText={messageText} sendMessage={sendMessage} handleOnChange={handleOnChange} />\n            </div>\n        <SockJsClient url={serverWebSocketUrl}\n        topics={[topicsUrl,\"/topic/alo\"]} \n        onConnect={()=>{console.log(\"Connected\");\n      //  clientRef.sendMessage('/app/user-all', JSON.stringify({  \n        //    message: \"online sam\"\n      //  }));\n    }}\n        onDisconnect={()=>{console.log(\"Disconnected\");\n        }}\n        onMessage={(msg)=>{\n            setMessages([...messages,msg]);\n            console.log(msg);\n        }}\n        ref={(client)=>{\n            setClientRef(client);\n            console.log(\"evo ga klijent: \"+client);\n        }}>\n        </SockJsClient>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}