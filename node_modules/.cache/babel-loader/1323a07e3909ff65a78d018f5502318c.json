{"ast":null,"code":"var _jsxFileName = \"/home/flic/messengerfafront/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core';\nimport Background from \"../background.jpg\";\nimport { loginEnd, membersUrl, messageUrl, offlineStatusEnd, onlineMembersUrl, onlineStatusEnd, sendNoticeOnlineStatusUrl, serverWebSocketUrl } from '../URLs';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport SockJsClient from \"react-stomp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const useStyle = makeStyles(theme => ({\n    app: {\n      display: \"grid\",\n      placeItems: \"center\",\n      backgroundColor: \"#ffdfc9\",\n      height: \"100vh\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundImage: `URL(${Background})`\n    },\n    app_body: {\n      display: \"flex\",\n      backgroundColor: \"white\",\n      height: \"90vh\",\n      width: \"90vw\",\n      boxShadow: \"-1px 4px 20px -6px rgba(0,0,0,0.2)\"\n    }\n  }));\n  const classes = useStyle();\n  const me = JSON.parse(localStorage.getItem(\"user\"));\n  let configToken = null;\n\n  if (me !== null) {\n    configToken = {\n      headers: {\n        Authorization: \"Bearer \" + me.token,\n        UserName: me.username\n      }\n    };\n  }\n\n  let [receiver, setReceiver] = useState({});\n  let [redirectToLogin, setRedirectToLogin] = useState(false);\n  let [onlineMembers, setOnlineMembers] = useState([]);\n  const [clientRef2, setClientRef2] = useState(null);\n  let notice = {\n    name: \"bye\",\n    message: \"bye\"\n  };\n  let [messages, setMessages] = useState([]);\n  React.useEffect(() => {\n    axios.get(onlineMembersUrl, configToken).then(res => {\n      setOnlineMembers(res.data);\n      console.log(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  React.useEffect(() => {\n    axios.get(messageUrl + me.id + \"/\" + (receiver.id === undefined ? \"0\" : receiver.id), configToken).then(res => {\n      setMessages(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  function logout() {\n    axios.get(membersUrl + me.id + offlineStatusEnd, configToken).then(console.log(\"you are online now\")).catch(function (error) //podesi svoj status na offline\n    {\n      console.log(error);\n    });\n    axios.post(sendNoticeOnlineStatusUrl, notice, configToken).then(console.log(\"you are offline now\")).catch(function (error) //posalji svima obavjest da si offline\n    {\n      console.log(error);\n    });\n    localStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"emailTokenStored\");\n    setRedirectToLogin(true);\n  }\n\n  function updateOnline() {\n    axios.get(onlineMembersUrl, configToken).then(res => {\n      setOnlineMembers(res.data);\n      console.log(\"punimo bazu online iz metode\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  function loadMessagesForChat(receiverDirect) {\n    axios.get(messageUrl + me.id + \"/\" + receiverDirect.id, configToken).then(res => {\n      setMessages(res.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  if (redirectToLogin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: loginEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.app,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.app_body,\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        setReceiver: setReceiver,\n        logout: logout,\n        onlineMembers: onlineMembers,\n        loadMessagesForChat: loadMessagesForChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        receiver: receiver,\n        messages: messages,\n        setMessages: setMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SockJsClient, {\n        url: serverWebSocketUrl,\n        topics: [\"/topic/user\"],\n        onConnect: () => {\n          console.log(\"Socket for online status connected\");\n          axios.get(membersUrl + me.id + onlineStatusEnd, configToken).then(console.log(\"you are online now\")).catch(function (error) {\n            console.log(error);\n          });\n          let notice = {\n            name: me.username,\n            message: me.usernmae\n          };\n          axios.post(sendNoticeOnlineStatusUrl, notice, configToken).then(console.log(\"everybody i am online\")).catch(function (error) //posalji svima obavjest da si offline\n          {\n            console.log(error);\n          });\n          ;\n        },\n        onDisconnect: () => {\n          console.log(\"Disconnected\");\n          axios.get(membersUrl + me.id + offlineStatusEnd, configToken).then(console.log(\"you are offline now\")).catch(function (error) {\n            console.log(error);\n          });\n          axios.post(sendNoticeOnlineStatusUrl, notice, configToken).then(console.log(\"everybody i am offline\")).catch(function (error) //posalji svima obavjest da si offline\n          {\n            console.log(error);\n          });\n        },\n        onMessage: msg => {\n          updateOnline();\n        },\n        onClose: e => {\n          axios.get(membersUrl + me.id + offlineStatusEnd, configToken).then(console.log(\"you are offline now\")).catch(function (error) {\n            console.log(error);\n          });\n          axios.post(sendNoticeOnlineStatusUrl, notice, configToken).then(console.log(\"everybody i am offline\")).catch(function (error) //posalji svima obavjest da si offline\n          {\n            console.log(error);\n          });\n        },\n        ref: client => {\n          setClientRef2(client);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Home, \"Yobo6Rfjj7uGQL07BNds1Rto874=\", true);\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/flic/messengerfafront/src/components/Home.js"],"names":["React","useState","Sidebar","Chat","makeStyles","Grid","Background","loginEnd","membersUrl","messageUrl","offlineStatusEnd","onlineMembersUrl","onlineStatusEnd","sendNoticeOnlineStatusUrl","serverWebSocketUrl","Navigate","axios","SockJsClient","Home","useStyle","theme","app","display","placeItems","backgroundColor","height","backgroundSize","backgroundRepeat","backgroundImage","app_body","width","boxShadow","classes","me","JSON","parse","localStorage","getItem","configToken","headers","Authorization","token","UserName","username","receiver","setReceiver","redirectToLogin","setRedirectToLogin","onlineMembers","setOnlineMembers","clientRef2","setClientRef2","notice","name","message","messages","setMessages","useEffect","get","then","res","data","console","log","catch","error","id","undefined","logout","post","removeItem","sessionStorage","updateOnline","loadMessagesForChat","receiverDirect","usernmae","msg","e","client"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core';\nimport Background from \"../background.jpg\";\nimport { loginEnd, membersUrl, messageUrl, offlineStatusEnd, onlineMembersUrl, onlineStatusEnd, sendNoticeOnlineStatusUrl, serverWebSocketUrl } from '../URLs';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport SockJsClient from \"react-stomp\";\n\n\nexport default function Home() \n{\n\n  const useStyle = makeStyles((theme) =>({\n    app:\n    {\n      display:\"grid\",\n      placeItems:\"center\",\n      backgroundColor:\"#ffdfc9\",\n      height:\"100vh\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundImage:`URL(${Background})`,\n    },\n    app_body:\n    {\n        display:\"flex\",\n        backgroundColor:\"white\",\n        height:\"90vh\",\n        width:\"90vw\",\n        boxShadow: \"-1px 4px 20px -6px rgba(0,0,0,0.2)\",\n    },\n    }));\n    const classes=useStyle();\n  const me=JSON.parse(localStorage.getItem(\"user\"))\n  let configToken=null;\n  if(me!==null)\n  {\n   configToken={ headers: {Authorization:\"Bearer \"+me.token,UserName:me.username}};\n  }\n\n  let [receiver,setReceiver]=useState({});\n  let [redirectToLogin,setRedirectToLogin]=useState(false);\n  let [onlineMembers,setOnlineMembers]=useState([]);\n  const[clientRef2,setClientRef2]=useState(null);\n  let notice={name:\"bye\",message:\"bye\"}\n  let [messages,setMessages]=useState([]);\n\n  React.useEffect(()=>{axios.get(onlineMembersUrl,configToken).then(res=>{setOnlineMembers(res.data);console.log(res.data)}).catch(function (error){console.log(error)});},[]);\n  React.useEffect(()=>{axios.get(messageUrl+me.id+\"/\"+((receiver.id===undefined)?\"0\":receiver.id),configToken).then(res=>{setMessages(res.data)}).catch(function (error){console.log(error)});},[]);\n  function logout()\n  { \n    axios.get(membersUrl+me.id+offlineStatusEnd,configToken).then(console.log(\"you are online now\")).catch(function (error) //podesi svoj status na offline\n            {\n              console.log(error);\n            });\n    axios.post(sendNoticeOnlineStatusUrl,notice,configToken).then(console.log(\"you are offline now\")).catch(function (error) //posalji svima obavjest da si offline\n    {\n      console.log(error);\n    });\n    localStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"emailTokenStored\");\n    setRedirectToLogin(true);\n  }\n\n  function updateOnline()\n  {\n    axios.get(onlineMembersUrl,configToken).then(res=>{setOnlineMembers(res.data);console.log(\"punimo bazu online iz metode\")}).catch(function (error){console.log(error)});\n  }\n\n  function loadMessagesForChat(receiverDirect)\n  {\n    axios.get(messageUrl+me.id+\"/\"+receiverDirect.id,configToken).then(res=>{setMessages(res.data)}).catch(function (error){console.log(error)});\n  }\n\n  if(redirectToLogin)\n  {\n    return <Navigate to={loginEnd}/>\n  }\n  return (<div className={classes.app}>\n    <div className={classes.app_body}>\n    <Sidebar setReceiver={setReceiver} logout={logout} onlineMembers={onlineMembers} loadMessagesForChat={loadMessagesForChat}/>\n    <Chat receiver={receiver} messages={messages} setMessages={setMessages}/>\n    <SockJsClient url={serverWebSocketUrl}\n        topics={[\"/topic/user\"]}\n        onConnect={()=>{\n            console.log(\"Socket for online status connected\");\n            axios.get(membersUrl+me.id+onlineStatusEnd,configToken).then(console.log(\"you are online now\")).catch(function (error)\n            {\n              console.log(error);\n            })\n            let notice={name:me.username,message:me.usernmae};\n            axios.post(sendNoticeOnlineStatusUrl,notice,configToken).then(console.log(\"everybody i am online\")).catch(function (error) //posalji svima obavjest da si offline\n            {\n              console.log(error);\n            });\n            ;}}\n\n        onDisconnect={()=>{console.log(\"Disconnected\");\n        axios.get(membersUrl+me.id+offlineStatusEnd,configToken).then(console.log(\"you are offline now\")).catch(function (error)\n        {\n          console.log(error);\n        });\n        axios.post(sendNoticeOnlineStatusUrl,notice,configToken).then(console.log(\"everybody i am offline\")).catch(function (error) //posalji svima obavjest da si offline\n        {\n          console.log(error);\n        });\n        }}\n\n        onMessage={(msg)=>{\n          updateOnline();\n        }}\n        onClose={(e)=>{\n          axios.get(membersUrl+me.id+offlineStatusEnd,configToken).then(console.log(\"you are offline now\")).catch(function (error)\n          {\n            console.log(error);\n          });\n          axios.post(sendNoticeOnlineStatusUrl,notice,configToken).then(console.log(\"everybody i am offline\")).catch(function (error) //posalji svima obavjest da si offline\n          {\n            console.log(error);\n          });\n\n        \n           \n        }}\n\n        ref={(client)=>{\n            setClientRef2(client);\n        }}>\n        </SockJsClient>\n\n    </div>\n  </div>\n  \n);\n}\n\n"]},"metadata":{},"sourceType":"module"}