{"ast":null,"code":"var childProcess = require('child_process');\n\nvar ifconfig = require('./ifconfig');\n\nvar Q = require('q');\n\nvar DEFAULT_GATEWAY_LINE_PATTERN = /\\n0\\.0\\.0\\.0.*?\\s*(\\w+?)\\n/m;\n\nmodule.exports.detectLocalIpV4Address = function () {\n  return Q.nfcall(childProcess.execFile, \"netstat\", [\"-r\", \"-n\", \"-A\", \"inet\"]).spread(function (stdout, stderr) {\n    var matches = stdout.match(DEFAULT_GATEWAY_LINE_PATTERN);\n\n    if (matches) {\n      var interfaceName = matches[1];\n      return interfaceName;\n    } else {\n      throw new Error(\"Could not find default gateway route in routing table.\");\n    }\n  }).then(ifconfig.getIpV4AddressForInterface);\n};","map":{"version":3,"sources":["/home/flic/test/node_modules/local-ipv4-address/detectors/linux.js"],"names":["childProcess","require","ifconfig","Q","DEFAULT_GATEWAY_LINE_PATTERN","module","exports","detectLocalIpV4Address","nfcall","execFile","spread","stdout","stderr","matches","match","interfaceName","Error","then","getIpV4AddressForInterface"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAOD,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAIE,CAAC,GAAcF,OAAO,CAAC,GAAD,CAA1B;;AAEA,IAAIG,4BAA4B,GAAG,6BAAnC;;AAEAC,MAAM,CAACC,OAAP,CAAeC,sBAAf,GAAwC,YAAU;AAC9C,SAAOJ,CAAC,CAACK,MAAF,CAASR,YAAY,CAACS,QAAtB,EAAgC,SAAhC,EAA2C,CAC1C,IAD0C,EAE1C,IAF0C,EAG1C,IAH0C,EAGpC,MAHoC,CAA3C,EAKFC,MALE,CAKK,UAASC,MAAT,EAAiBC,MAAjB,EAAwB;AAC5B,QAAIC,OAAO,GAAGF,MAAM,CAACG,KAAP,CAAaV,4BAAb,CAAd;;AACA,QAAGS,OAAH,EAAW;AACP,UAAIE,aAAa,GAAGF,OAAO,CAAC,CAAD,CAA3B;AACA,aAAOE,aAAP;AACH,KAHD,MAGO;AACH,YAAM,IAAIC,KAAJ,CAAU,wDAAV,CAAN;AACH;AACJ,GAbE,EAcFC,IAdE,CAcGf,QAAQ,CAACgB,0BAdZ,CAAP;AAeH,CAhBD","sourcesContent":["var childProcess = require('child_process');\nvar ifconfig     = require('./ifconfig');\nvar Q            = require('q');\n\nvar DEFAULT_GATEWAY_LINE_PATTERN = /\\n0\\.0\\.0\\.0.*?\\s*(\\w+?)\\n/m;\n\nmodule.exports.detectLocalIpV4Address = function(){\n    return Q.nfcall(childProcess.execFile, \"netstat\", [\n            \"-r\",\n            \"-n\",\n            \"-A\", \"inet\"\n        ])\n        .spread(function(stdout, stderr){\n            var matches = stdout.match(DEFAULT_GATEWAY_LINE_PATTERN);\n            if(matches){\n                var interfaceName = matches[1];\n                return interfaceName;\n            } else {\n                throw new Error(\"Could not find default gateway route in routing table.\");\n            }\n        })\n        .then(ifconfig.getIpV4AddressForInterface);\n};"]},"metadata":{},"sourceType":"script"}