{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst pathKey = require('path-key');\n\nconst npmRunPath = options => {\n  options = {\n    cwd: process.cwd(),\n    path: process.env[pathKey()],\n    execPath: process.execPath,\n    ...options\n  };\n  let previous;\n  let cwdPath = path.resolve(options.cwd);\n  const result = [];\n\n  while (previous !== cwdPath) {\n    result.push(path.join(cwdPath, 'node_modules/.bin'));\n    previous = cwdPath;\n    cwdPath = path.resolve(cwdPath, '..');\n  } // Ensure the running `node` binary is used\n\n\n  const execPathDir = path.resolve(options.cwd, options.execPath, '..');\n  result.push(execPathDir);\n  return result.concat(options.path).join(path.delimiter);\n};\n\nmodule.exports = npmRunPath; // TODO: Remove this for the next major release\n\nmodule.exports.default = npmRunPath;\n\nmodule.exports.env = options => {\n  options = {\n    env: process.env,\n    ...options\n  };\n  const env = { ...options.env\n  };\n  const path = pathKey({\n    env\n  });\n  options.path = env[path];\n  env[path] = module.exports(options);\n  return env;\n};","map":{"version":3,"sources":["/home/flic/test/node_modules/default-gateway/node_modules/npm-run-path/index.js"],"names":["path","require","pathKey","npmRunPath","options","cwd","process","env","execPath","previous","cwdPath","resolve","result","push","join","execPathDir","concat","delimiter","module","exports","default"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AAEA,MAAME,UAAU,GAAGC,OAAO,IAAI;AAC7BA,EAAAA,OAAO,GAAG;AACTC,IAAAA,GAAG,EAAEC,OAAO,CAACD,GAAR,EADI;AAETL,IAAAA,IAAI,EAAEM,OAAO,CAACC,GAAR,CAAYL,OAAO,EAAnB,CAFG;AAGTM,IAAAA,QAAQ,EAAEF,OAAO,CAACE,QAHT;AAIT,OAAGJ;AAJM,GAAV;AAOA,MAAIK,QAAJ;AACA,MAAIC,OAAO,GAAGV,IAAI,CAACW,OAAL,CAAaP,OAAO,CAACC,GAArB,CAAd;AACA,QAAMO,MAAM,GAAG,EAAf;;AAEA,SAAOH,QAAQ,KAAKC,OAApB,EAA6B;AAC5BE,IAAAA,MAAM,CAACC,IAAP,CAAYb,IAAI,CAACc,IAAL,CAAUJ,OAAV,EAAmB,mBAAnB,CAAZ;AACAD,IAAAA,QAAQ,GAAGC,OAAX;AACAA,IAAAA,OAAO,GAAGV,IAAI,CAACW,OAAL,CAAaD,OAAb,EAAsB,IAAtB,CAAV;AACA,GAhB4B,CAkB7B;;;AACA,QAAMK,WAAW,GAAGf,IAAI,CAACW,OAAL,CAAaP,OAAO,CAACC,GAArB,EAA0BD,OAAO,CAACI,QAAlC,EAA4C,IAA5C,CAApB;AACAI,EAAAA,MAAM,CAACC,IAAP,CAAYE,WAAZ;AAEA,SAAOH,MAAM,CAACI,MAAP,CAAcZ,OAAO,CAACJ,IAAtB,EAA4Bc,IAA5B,CAAiCd,IAAI,CAACiB,SAAtC,CAAP;AACA,CAvBD;;AAyBAC,MAAM,CAACC,OAAP,GAAiBhB,UAAjB,C,CACA;;AACAe,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBjB,UAAzB;;AAEAe,MAAM,CAACC,OAAP,CAAeZ,GAAf,GAAqBH,OAAO,IAAI;AAC/BA,EAAAA,OAAO,GAAG;AACTG,IAAAA,GAAG,EAAED,OAAO,CAACC,GADJ;AAET,OAAGH;AAFM,GAAV;AAKA,QAAMG,GAAG,GAAG,EAAC,GAAGH,OAAO,CAACG;AAAZ,GAAZ;AACA,QAAMP,IAAI,GAAGE,OAAO,CAAC;AAACK,IAAAA;AAAD,GAAD,CAApB;AAEAH,EAAAA,OAAO,CAACJ,IAAR,GAAeO,GAAG,CAACP,IAAD,CAAlB;AACAO,EAAAA,GAAG,CAACP,IAAD,CAAH,GAAYkB,MAAM,CAACC,OAAP,CAAef,OAAf,CAAZ;AAEA,SAAOG,GAAP;AACA,CAbD","sourcesContent":["'use strict';\nconst path = require('path');\nconst pathKey = require('path-key');\n\nconst npmRunPath = options => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\tpath: process.env[pathKey()],\n\t\texecPath: process.execPath,\n\t\t...options\n\t};\n\n\tlet previous;\n\tlet cwdPath = path.resolve(options.cwd);\n\tconst result = [];\n\n\twhile (previous !== cwdPath) {\n\t\tresult.push(path.join(cwdPath, 'node_modules/.bin'));\n\t\tprevious = cwdPath;\n\t\tcwdPath = path.resolve(cwdPath, '..');\n\t}\n\n\t// Ensure the running `node` binary is used\n\tconst execPathDir = path.resolve(options.cwd, options.execPath, '..');\n\tresult.push(execPathDir);\n\n\treturn result.concat(options.path).join(path.delimiter);\n};\n\nmodule.exports = npmRunPath;\n// TODO: Remove this for the next major release\nmodule.exports.default = npmRunPath;\n\nmodule.exports.env = options => {\n\toptions = {\n\t\tenv: process.env,\n\t\t...options\n\t};\n\n\tconst env = {...options.env};\n\tconst path = pathKey({env});\n\n\toptions.path = env[path];\n\tenv[path] = module.exports(options);\n\n\treturn env;\n};\n"]},"metadata":{},"sourceType":"script"}