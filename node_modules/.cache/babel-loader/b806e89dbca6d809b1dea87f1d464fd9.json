{"ast":null,"code":"var _jsxFileName = \"/home/flic/messengerfafront/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, IconButton, InputBase } from '@material-ui/core';\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Message from './Message';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { PermPhoneMsg, StarTwoTone } from '@material-ui/icons';\nimport SockJsClient from \"react-stomp\";\nimport client from 'react-stomp';\nimport { messageUrl, serverWebSocketUrl, simetricKeyS, topicsUrl } from '../URLs';\nimport ChatInput from '../forms/ChatInput';\nimport axios from \"axios\";\nimport { membersUrl, onlineStatusEnd } from \"../URLs\";\nimport cryptoJs from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat(props) {\n  _s();\n\n  const useStyle = makeStyles(theme => ({\n    chat: {\n      flex: \"0.6\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      boxShadow: \"0 2px 4px grey\"\n    },\n    chat_header: {\n      height: \"60px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      background: \"#ff964c\",\n      boxShadow: \"0 2px 4px grey\"\n    },\n    chat_header_avatar: {\n      marginLeft: \"10px\",\n      border: \"2px solid #7f1e00\",\n      color: \"#d16519\",\n      background: \"#ffeecb\"\n    },\n    chat_header_name: {\n      marginLeft: \"10px\",\n      color: \"white\",\n      textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\"\n    },\n    chat_body: {\n      padding: \"30px 10px\",\n      overflowY: \"auto\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"80%\"\n    },\n    chat_footer: {\n      display: \"flex\",\n      flex: \"1\",\n      height: \"7%\",\n      borderTop: \"2px solid grey\"\n    },\n    chat_input: {\n      height: \"60%\",\n      width: \"100%\",\n      border: \"none\",\n      marginLeft: \"10px\",\n      fontSize: \"20px\"\n    },\n    chat_form: {\n      display: \"flex\",\n      flex: \"1\",\n      height: \"100px\"\n    },\n    button: {\n      background: \"#ffab6f\",\n      width: \"50px\",\n      height: \"50px\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      marginLeft: \"5px\",\n      marginRight: \"5px\"\n    },\n    chat_exit: {\n      position: \"relative\",\n      alignSelf: \"right\"\n    }\n  }));\n  let me = null;\n  let configToken = null;\n\n  if (localStorage.getItem(\"user\") !== null) {\n    try {\n      var bytes = cryptoJs.AES.decrypt(localStorage.getItem(\"user\"), simetricKeyS);\n      me = JSON.parse(bytes.toString(cryptoJs.enc.Utf8));\n\n      if (me !== null) {\n        configToken = {\n          headers: {\n            Authorization: \"Bearer \" + me.token,\n            UserName: me.username\n          }\n        };\n      }\n    } catch (error) {\n      alert(\"Bad decrypt\");\n    }\n  }\n\n  const classes = useStyle();\n  let [messageText, setMessageText] = useState(\"\");\n  const [clientRef, setClientRef] = useState(null);\n  /*  function sendMessage(messagetxt,from)\n    {\n        if(messagetxt!==\"\")\n        {\n        clientRef.sendMessage('/app/user-all', JSON.stringify({  \n            message: messagetxt,\n            name:from\n         }));\n        setMessageText(\"\");\n        }\n    }*/\n\n  function sendMessage(messagetxt, from) {\n    if (messagetxt !== \"\") {\n      let msg = {\n        memberSenderUsername: me.username,\n        text: messagetxt\n      };\n      props.setMessages([...props.messages, msg]); //  clientRef.sendMessage('/app/websocket-chat/'+props.receiver,JSON.stringify({message: messagetxt,name:me.username})); vrati ovo \n\n      clientRef.sendMessage('/app/websocket-chat/' + props.receiver.username, JSON.stringify({\n        idMemberSender: me.id,\n        idMemberReceiver: props.receiver.id,\n        memberSenderUsername: me.username,\n        memberReceiverUsername: props.receiver.username,\n        text: messagetxt\n      })); //vratio ovo\n\n      setMessageText(\"\");\n    }\n  }\n\n  function handleOnChange(e) {\n    setMessageText(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chat,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_header,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.chat_header_avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chat_header_name,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.receiver.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_body,\n      children: props.messages.map(msg => /*#__PURE__*/_jsxDEV(Message, {\n        msg: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chat_footer,\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        setMessageText: setMessageText,\n        messageText: messageText,\n        sendMessage: sendMessage,\n        handleOnChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SockJsClient, {\n      url: serverWebSocketUrl,\n      topics: [topicsUrl + me.username],\n      onConnect: () => {\n        console.log(\"Connected\");\n        axios.get(membersUrl + me.id + onlineStatusEnd, configToken).then(console.log(\"you are online now\")).catch(function (error) {\n          console.log(error);\n        });\n      },\n      onDisconnect: () => {\n        console.log(\"Disconnected\");\n      },\n      onMessage: msg => {\n        //    if(props.receiver===(msg.name))  vrati ovo\n        if (msg.text === \"<exit></exit>\") props.logout();\n        if (props.receiver.username === msg.memberSenderUsername) props.setMessages([...props.messages, msg]);\n      },\n      onError: () => {\n        alert(\"Disconnected\");\n      },\n      ref: client => {\n        setClientRef(client);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"M8+TIxLHdilTq2ZKK8C54v/7isI=\", true);\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/flic/messengerfafront/src/components/Chat.js"],"names":["React","useState","makeStyles","Avatar","IconButton","InputBase","SendIcon","Message","ExitToApp","PermPhoneMsg","StarTwoTone","SockJsClient","client","messageUrl","serverWebSocketUrl","simetricKeyS","topicsUrl","ChatInput","axios","membersUrl","onlineStatusEnd","cryptoJs","Chat","props","useStyle","theme","chat","flex","display","flexDirection","boxShadow","chat_header","height","alignItems","background","chat_header_avatar","marginLeft","border","color","chat_header_name","textShadow","chat_body","padding","overflowY","chat_footer","borderTop","chat_input","width","fontSize","chat_form","button","marginTop","marginBottom","marginRight","chat_exit","position","alignSelf","me","configToken","localStorage","getItem","bytes","AES","decrypt","JSON","parse","toString","enc","Utf8","headers","Authorization","token","UserName","username","error","alert","classes","messageText","setMessageText","clientRef","setClientRef","sendMessage","messagetxt","from","msg","memberSenderUsername","text","setMessages","messages","receiver","stringify","idMemberSender","id","idMemberReceiver","memberReceiverUsername","handleOnChange","e","target","value","map","console","log","get","then","catch","logout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Avatar,IconButton,InputBase} from '@material-ui/core';\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Message from './Message';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { PermPhoneMsg, StarTwoTone } from '@material-ui/icons';\nimport SockJsClient from \"react-stomp\";\nimport client from 'react-stomp';\nimport { messageUrl, serverWebSocketUrl,simetricKeyS,topicsUrl } from '../URLs';\nimport ChatInput from '../forms/ChatInput';\nimport axios from \"axios\";\nimport {membersUrl,onlineStatusEnd} from \"../URLs\";\nimport cryptoJs from 'crypto-js';\n\nexport default function Chat(props)\n{\n    const useStyle = makeStyles((theme) =>({\n        chat:\n        {\n          flex:\"0.6\",\n          display:\"flex\",\n          flexDirection:\"column\",\n          boxShadow: \"0 2px 4px grey\",\n        },\n        chat_header:\n        {\n            height:\"60px\",\n            display:\"flex\",\n            alignItems:\"center\",\n            background:\"#ff964c\",\n            boxShadow: \"0 2px 4px grey\",\n        },\n        chat_header_avatar:\n        {\n            marginLeft:\"10px\",\n            border:\"2px solid #7f1e00\",\n            color:\"#d16519\",\n            background:\"#ffeecb\",\n        },\n        chat_header_name:\n        {\n            marginLeft:\"10px\",\n            color:\"white\",\n            textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\",\n        },\n        chat_body:\n        {\n            padding:\"30px 10px\",\n            overflowY:\"auto\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            height:\"80%\"\n\n        },\n        chat_footer:\n        {\n           display:\"flex\",\n           flex:\"1\",\n           height:\"7%\",\n           borderTop:\"2px solid grey\",\n        },\n        chat_input:\n        {\n            height:\"60%\",\n            width:\"100%\",\n            border:\"none\",\n            marginLeft:\"10px\",\n            fontSize:\"20px\",\n\n        },\n        chat_form:\n        {\n            display:\"flex\",\n            flex:\"1\",\n            height:\"100px\",\n        },\n        button:\n        {\n            background:\"#ffab6f\",\n            width:\"50px\",\n            height:\"50px\",\n            marginTop: \"5px\",\n            marginBottom: \"5px\",\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n        },\n        chat_exit:\n        {\n           position:\"relative\",\n           alignSelf:\"right\",\n        }\n    }));\n    let me=null;\n    let configToken=null;\n  if(localStorage.getItem(\"user\")!==null)\n  {\n    try\n    {\n    var bytes = cryptoJs.AES.decrypt(localStorage.getItem(\"user\"),simetricKeyS);\n    me = JSON.parse(bytes.toString(cryptoJs.enc.Utf8));\n    \n     if(me!==null)\n     {\n       configToken={ headers: {Authorization:\"Bearer \"+me.token,UserName:me.username}};\n     }\n     }\n     catch(error)\n     {\n       alert(\"Bad decrypt\");\n     }\n  }\n \n    const classes=useStyle();\n    let [messageText,setMessageText]=useState(\"\");\n    const[clientRef,setClientRef]=useState(null);\n    \n  /*  function sendMessage(messagetxt,from)\n    {\n        if(messagetxt!==\"\")\n        {\n        clientRef.sendMessage('/app/user-all', JSON.stringify({  \n            message: messagetxt,\n            name:from\n\n        }));\n        setMessageText(\"\");\n        }\n    }*/\n\n    function sendMessage(messagetxt,from)\n    {\n        if(messagetxt!==\"\")\n        {\n      \n       let msg={memberSenderUsername:me.username,text:messagetxt}; \n        props.setMessages([...props.messages,msg]);\n      //  clientRef.sendMessage('/app/websocket-chat/'+props.receiver,JSON.stringify({message: messagetxt,name:me.username})); vrati ovo \n      clientRef.sendMessage('/app/websocket-chat/'+props.receiver.username,\n      JSON.stringify({idMemberSender:me.id,idMemberReceiver:props.receiver.id,memberSenderUsername:me.username,memberReceiverUsername:props.receiver.username,text:messagetxt})); //vratio ovo\n        setMessageText(\"\");\n        }\n    }\n\n    function handleOnChange(e)\n    {\n        setMessageText(e.target.value);\n    }\n\n\n\n\n    return (\n        <div className={classes.chat}>\n            <div className={classes.chat_header}>\n            <Avatar className={classes.chat_header_avatar}/>\n            <div className={classes.chat_header_name}>\n                <h2>{props.receiver.username}</h2>\n            </div>\n           \n            </div>\n            <div className={classes.chat_body}>\n            {\n            props.messages.map(msg=> <Message msg={msg}/>)\n            }\n            </div>\n            <div className={classes.chat_footer}> \n                <ChatInput setMessageText={setMessageText} messageText={messageText} sendMessage={sendMessage} handleOnChange={handleOnChange} />\n            </div>\n            \n        <SockJsClient url={serverWebSocketUrl}\n        topics={[topicsUrl+me.username]}\n        onConnect={()=>{\n            console.log(\"Connected\");\n            axios.get(membersUrl+me.id+onlineStatusEnd,configToken).then(console.log(\"you are online now\")).catch(function (error)\n            {\n              console.log(error);\n            });}}\n        onDisconnect={()=>{console.log(\"Disconnected\");\n        }}\n\n        onMessage={(msg)=>{\n        //    if(props.receiver===(msg.name))  vrati ovo\n\n            if(msg.text===\"<exit></exit>\")\n            props.logout();\n            if(props.receiver.username===(msg.memberSenderUsername))  \n            props.setMessages([...props.messages,msg]);\n          \n        }}\n\n        onError={()=>{alert(\"Disconnected\");}}\n\n      \n\n        ref={(client)=>{\n            setClientRef(client);\n        }}>\n        </SockJsClient>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}