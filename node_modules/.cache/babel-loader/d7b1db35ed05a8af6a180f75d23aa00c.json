{"ast":null,"code":"\"use strict\";\n\nconst execa = require(\"execa\");\n\nconst db2util = \"/QOpenSys/pkgs/bin/db2util\";\nconst sql = \"select NEXT_HOP, LOCAL_BINDING_INTERFACE from QSYS2.NETSTAT_ROUTE_INFO where ROUTE_TYPE='DFTROUTE' and NEXT_HOP!='*DIRECT' and CONNECTION_TYPE=?\";\n\nconst parse = stdout => {\n  let result;\n\n  try {\n    const resultObj = JSON.parse(stdout);\n    const gateway = resultObj.records[0].NEXT_HOP;\n    const iface = resultObj.records[0].LOCAL_BINDING_INTERFACE;\n    result = {\n      gateway,\n      iface\n    };\n  } catch {}\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nconst promise = async family => {\n  const {\n    stdout\n  } = await execa(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\n\nconst sync = family => {\n  const {\n    stdout\n  } = execa.sync(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\n\nmodule.exports.v4 = () => promise(\"IPV4\");\n\nmodule.exports.v6 = () => promise(\"IPV6\");\n\nmodule.exports.v4.sync = () => sync(\"IPV4\");\n\nmodule.exports.v6.sync = () => sync(\"IPV6\");","map":{"version":3,"sources":["/home/flic/test/node_modules/default-gateway/ibmi.js"],"names":["execa","require","db2util","sql","parse","stdout","result","resultObj","JSON","gateway","records","NEXT_HOP","iface","LOCAL_BINDING_INTERFACE","Error","promise","family","sync","module","exports","v4","v6"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,OAAO,GAAG,4BAAhB;AACA,MAAMC,GAAG,GAAG,kJAAZ;;AAEA,MAAMC,KAAK,GAAGC,MAAM,IAAI;AACtB,MAAIC,MAAJ;;AACA,MAAI;AACF,UAAMC,SAAS,GAAGC,IAAI,CAACJ,KAAL,CAAWC,MAAX,CAAlB;AACA,UAAMI,OAAO,GAAGF,SAAS,CAACG,OAAV,CAAkB,CAAlB,EAAqBC,QAArC;AACA,UAAMC,KAAK,GAAGL,SAAS,CAACG,OAAV,CAAkB,CAAlB,EAAqBG,uBAAnC;AACAP,IAAAA,MAAM,GAAG;AAACG,MAAAA,OAAD;AAAUG,MAAAA;AAAV,KAAT;AACD,GALD,CAKE,MAAM,CAAE;;AACV,MAAI,CAACN,MAAL,EAAa;AACX,UAAM,IAAIQ,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACD,SAAOR,MAAP;AACD,CAZD;;AAcA,MAAMS,OAAO,GAAG,MAAMC,MAAN,IAAgB;AAC9B,QAAM;AAACX,IAAAA;AAAD,MAAW,MAAML,KAAK,CAACE,OAAD,EAAU,CAACC,GAAD,EAAM,IAAN,EAAYa,MAAZ,EAAoB,IAApB,EAA0B,MAA1B,CAAV,CAA5B;AACA,SAAOZ,KAAK,CAACC,MAAD,CAAZ;AACD,CAHD;;AAKA,MAAMY,IAAI,GAAGD,MAAM,IAAI;AACrB,QAAM;AAACX,IAAAA;AAAD,MAAWL,KAAK,CAACiB,IAAN,CAAWf,OAAX,EAAoB,CAACC,GAAD,EAAM,IAAN,EAAYa,MAAZ,EAAoB,IAApB,EAA0B,MAA1B,CAApB,CAAjB;AACA,SAAOZ,KAAK,CAACC,MAAD,CAAZ;AACD,CAHD;;AAKAa,MAAM,CAACC,OAAP,CAAeC,EAAf,GAAoB,MAAML,OAAO,CAAC,MAAD,CAAjC;;AACAG,MAAM,CAACC,OAAP,CAAeE,EAAf,GAAoB,MAAMN,OAAO,CAAC,MAAD,CAAjC;;AAEAG,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkBH,IAAlB,GAAyB,MAAMA,IAAI,CAAC,MAAD,CAAnC;;AACAC,MAAM,CAACC,OAAP,CAAeE,EAAf,CAAkBJ,IAAlB,GAAyB,MAAMA,IAAI,CAAC,MAAD,CAAnC","sourcesContent":["\"use strict\";\n\nconst execa = require(\"execa\");\n\nconst db2util = \"/QOpenSys/pkgs/bin/db2util\";\nconst sql = \"select NEXT_HOP, LOCAL_BINDING_INTERFACE from QSYS2.NETSTAT_ROUTE_INFO where ROUTE_TYPE='DFTROUTE' and NEXT_HOP!='*DIRECT' and CONNECTION_TYPE=?\";\n\nconst parse = stdout => {\n  let result;\n  try {\n    const resultObj = JSON.parse(stdout);\n    const gateway = resultObj.records[0].NEXT_HOP;\n    const iface = resultObj.records[0].LOCAL_BINDING_INTERFACE;\n    result = {gateway, iface};\n  } catch {}\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n  return result;\n};\n\nconst promise = async family => {\n  const {stdout} = await execa(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\n\nconst sync = family => {\n  const {stdout} = execa.sync(db2util, [sql, \"-p\", family, \"-o\", \"json\"]);\n  return parse(stdout);\n};\n\nmodule.exports.v4 = () => promise(\"IPV4\");\nmodule.exports.v6 = () => promise(\"IPV6\");\n\nmodule.exports.v4.sync = () => sync(\"IPV4\");\nmodule.exports.v6.sync = () => sync(\"IPV6\");\n"]},"metadata":{},"sourceType":"script"}