{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signalsByNumber = exports.signalsByName = void 0;\n\nvar _os = require(\"os\");\n\nvar _signals = require(\"./signals.js\");\n\nvar _realtime = require(\"./realtime.js\");\n\nconst getSignalsByName = function () {\n  const signals = (0, _signals.getSignals)();\n  return signals.reduce(getSignalByName, {});\n};\n\nconst getSignalByName = function (signalByNameMemo, _ref) {\n  let {\n    name,\n    number,\n    description,\n    supported,\n    action,\n    forced,\n    standard\n  } = _ref;\n  return { ...signalByNameMemo,\n    [name]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard\n    }\n  };\n};\n\nconst signalsByName = getSignalsByName();\nexports.signalsByName = signalsByName;\n\nconst getSignalsByNumber = function () {\n  const signals = (0, _signals.getSignals)();\n  const length = _realtime.SIGRTMAX + 1;\n  const signalsA = Array.from({\n    length\n  }, (value, number) => getSignalByNumber(number, signals));\n  return Object.assign({}, ...signalsA);\n};\n\nconst getSignalByNumber = function (number, signals) {\n  const signal = findSignalByNumber(number, signals);\n\n  if (signal === undefined) {\n    return {};\n  }\n\n  const {\n    name,\n    description,\n    supported,\n    action,\n    forced,\n    standard\n  } = signal;\n  return {\n    [number]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard\n    }\n  };\n};\n\nconst findSignalByNumber = function (number, signals) {\n  const signal = signals.find(_ref2 => {\n    let {\n      name\n    } = _ref2;\n    return _os.constants.signals[name] === number;\n  });\n\n  if (signal !== undefined) {\n    return signal;\n  }\n\n  return signals.find(signalA => signalA.number === number);\n};\n\nconst signalsByNumber = getSignalsByNumber();\nexports.signalsByNumber = signalsByNumber;","map":{"version":3,"sources":["../../src/main.js"],"names":["getSignalsByName","signals","getSignalByName","signalsByName","getSignalsByNumber","length","SIGRTMAX","signalsA","Array","getSignalByNumber","Object","signal","findSignalByNumber","constants","signalA","signalsByNumber"],"mappings":";;;;;;;AAAA,IAAA,GAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAIA,MAAMA,gBAAgB,GAAG,YAAW;AAClC,QAAMC,OAAO,GAAG,CAAA,GAAA,QAAA,CAAhB,UAAgB,GAAhB;AACA,SAAOA,OAAO,CAAPA,MAAAA,CAAAA,eAAAA,EAAP,EAAOA,CAAP;AAFF,CAAA;;AAKA,MAAMC,eAAe,GAAG,UAAA,gBAAA,QAGtB;AAAA,MADA;AAAA,IAAA,IAAA;AAAA,IAAA,MAAA;AAAA,IAAA,WAAA;AAAA,IAAA,SAAA;AAAA,IAAA,MAAA;AAAA,IAAA,MAAA;AAFsB,IAAA;AAEtB,GACA;AACA,SAAO,EACL,GADK,gBAAA;AAEL,KAAA,IAAA,GAAQ;AAAA,MAAA,IAAA;AAAA,MAAA,MAAA;AAAA,MAAA,WAAA;AAAA,MAAA,SAAA;AAAA,MAAA,MAAA;AAAA,MAAA,MAAA;AAFV,MAAA;AAEU;AAFH,GAAP;AAJF,CAAA;;AAUO,MAAMC,aAAa,GAAGH,gBAAtB,EAAA;;;AAKP,MAAMI,kBAAkB,GAAG,YAAW;AACpC,QAAMH,OAAO,GAAG,CAAA,GAAA,QAAA,CAAhB,UAAgB,GAAhB;AACA,QAAMI,MAAM,GAAGC,SAAAA,CAAAA,QAAAA,GAAf,CAAA;AACA,QAAMC,QAAQ,GAAGC,KAAK,CAALA,IAAAA,CAAW;AAAXA,IAAAA;AAAW,GAAXA,EAAuB,CAAA,KAAA,EAAA,MAAA,KACtCC,iBAAiB,CAAA,MAAA,EADnB,OACmB,CADFD,CAAjB;AAGA,SAAOE,MAAM,CAANA,MAAAA,CAAAA,EAAAA,EAAkB,GAAzB,QAAOA,CAAP;AANF,CAAA;;AASA,MAAMD,iBAAiB,GAAG,UAAA,MAAA,EAAA,OAAA,EAA0B;AAClD,QAAME,MAAM,GAAGC,kBAAkB,CAAA,MAAA,EAAjC,OAAiC,CAAjC;;AAEA,MAAID,MAAM,KAAV,SAAA,EAA0B;AACxB,WAAA,EAAA;AACD;;AAED,QAAM;AAAA,IAAA,IAAA;AAAA,IAAA,WAAA;AAAA,IAAA,SAAA;AAAA,IAAA,MAAA;AAAA,IAAA,MAAA;AAAA,IAAA;AAAA,MAAN,MAAA;AACA,SAAO;AACL,KAAA,MAAA,GAAU;AAAA,MAAA,IAAA;AAAA,MAAA,MAAA;AAAA,MAAA,WAAA;AAAA,MAAA,SAAA;AAAA,MAAA,MAAA;AAAA,MAAA,MAAA;AADZ,MAAA;AACY;AADL,GAAP;AARF,CAAA;;AAuBA,MAAMC,kBAAkB,GAAG,UAAA,MAAA,EAAA,OAAA,EAA0B;AACnD,QAAMD,MAAM,GAAGV,OAAO,CAAPA,IAAAA,CAAa;AAAA,QAAC;AAAD,MAAA;AAAC,KAAD;AAAA,WAAcY,GAAAA,CAAAA,SAAAA,CAAAA,OAAAA,CAAAA,IAAAA,MAA1C,MAA4B;AAAA,GAAbZ,CAAf;;AAEA,MAAIU,MAAM,KAAV,SAAA,EAA0B;AACxB,WAAA,MAAA;AACD;;AAED,SAAOV,OAAO,CAAPA,IAAAA,CAAaa,OAAO,IAAIA,OAAO,CAAPA,MAAAA,KAA/B,MAAOb,CAAP;AAPF,CAAA;;AAUO,MAAMc,eAAe,GAAGX,kBAAxB,EAAA","sourcesContent":["import { constants } from 'os'\n\nimport { getSignals } from './signals.js'\nimport { SIGRTMAX } from './realtime.js'\n\n// Retrieve `signalsByName`, an object mapping signal name to signal properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByName = function() {\n  const signals = getSignals()\n  return signals.reduce(getSignalByName, {})\n}\n\nconst getSignalByName = function(\n  signalByNameMemo,\n  { name, number, description, supported, action, forced, standard },\n) {\n  return {\n    ...signalByNameMemo,\n    [name]: { name, number, description, supported, action, forced, standard },\n  }\n}\n\nexport const signalsByName = getSignalsByName()\n\n// Retrieve `signalsByNumber`, an object mapping signal number to signal\n// properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByNumber = function() {\n  const signals = getSignals()\n  const length = SIGRTMAX + 1\n  const signalsA = Array.from({ length }, (value, number) =>\n    getSignalByNumber(number, signals),\n  )\n  return Object.assign({}, ...signalsA)\n}\n\nconst getSignalByNumber = function(number, signals) {\n  const signal = findSignalByNumber(number, signals)\n\n  if (signal === undefined) {\n    return {}\n  }\n\n  const { name, description, supported, action, forced, standard } = signal\n  return {\n    [number]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard,\n    },\n  }\n}\n\n// Several signals might end up sharing the same number because of OS-specific\n// numbers, in which case those prevail.\nconst findSignalByNumber = function(number, signals) {\n  const signal = signals.find(({ name }) => constants.signals[name] === number)\n\n  if (signal !== undefined) {\n    return signal\n  }\n\n  return signals.find(signalA => signalA.number === number)\n}\n\nexport const signalsByNumber = getSignalsByNumber()\n"]},"metadata":{},"sourceType":"script"}