{"ast":null,"code":"var _jsxFileName = \"/home/flic/messengerfafront/src/forms/CertificateUploadForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport { Button, FormLabel, FormGroup } from \"@material-ui/core\"; //import \"./Universal.css\";\n\nimport axios from \"axios\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport Background from \"../background.jpg\";\nimport { loginUrl, emailSendTokenUrl, emailTokenFrontEnd, certificateUploadUrl, loginEnd, simetricKeyS } from \"../URLs\";\nimport cryptoJs from \"crypto-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CertificateUploadForm(props) {\n  _s();\n\n  const useStyle = makeStyles(theme => ({\n    root: {\n      width: \"100%\",\n      height: \"100vh\",\n      textAlign: \"center\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      background: \"#f7dbcc\",\n      overflowX: \"scroll\",\n      backgroundImage: `URL(${Background})`\n    },\n    button: {\n      width: \"320px\",\n      marginTop: \"50px\",\n      display: \"relative\",\n      background: \"#e0e047\",\n      border: \"2px solid #ea668e\",\n      color: \"black\",\n      \"&:hover\": {\n        background: fade(\"#e33269\", 0.75),\n        border: \"2px solid yellow\",\n        color: \"white\"\n      }\n    },\n    label: {\n      fontSize: \"20px\",\n      fontFamily: \"Lucida Handwriting\",\n      padding: \"10px\",\n      alignSelf: \"center\",\n      color: \"white\",\n      fontWeight: \"bold\",\n      textShadow: \"2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black\"\n    },\n    title: {\n      textAlign: \"center\",\n      fontSize: \"30px\",\n      fontFamily: \"Lucida Handwriting\",\n      textShadow: \"2px 0 0 #d2d9db, -2px 0 0 #d2d9db, 0 2px 0 #d2d9db, 0 -2px 0 #d2d9db, 1px 1px #d2d9db, -1px -1px 0 #d2d9db, 1px -1px 0 #d2d9db, -1px 1px 0 #d2d9db\"\n    },\n    link: {\n      color: \"yellow\",\n      marginTop: \"10px\",\n      fontSize: \"21px\",\n      paddingLeft: \"10px\",\n      textShadow: \"0 0 5px black\",\n      \"&:hover\": {\n        color: \"#e3f15b\"\n      }\n    },\n    createInput: {\n      margine: \"10 10 10 10\",\n      height: \"150px\",\n      width: \"400px\",\n      fontSize: \"22px\",\n      padding: \"10px\",\n      boxSizing: \"borderBox\",\n      borderRadius: \"3px\",\n      borderStyle: \"dotted\",\n      border: \"solid\",\n      borderColor: \"white\",\n      outlineColor: \"blue\",\n      boxShadow: \"0 2px 4px grey\",\n      alignSelf: \"center\"\n    }\n  }));\n\n  function handleSubmit() {}\n\n  const classes = useStyle();\n  let [selectedFile, setSelectedFile] = useState(null);\n  let [uploadEnabled, setUploadEnabled] = useState(true);\n  let [redirectToEmail, setRedirectToEmail] = useState(false);\n  let [redirectToLogin, setRedirectToLogin] = useState(false);\n  let me = null;\n  let configToken = null;\n\n  if (localStorage.getItem(\"user\") !== null) {\n    try {\n      var bytes = cryptoJs.AES.decrypt(localStorage.getItem(\"user\"), simetricKeyS);\n      me = JSON.parse(bytes.toString(cryptoJs.enc.Utf8));\n    } catch (error) {\n      alert.log(\"dirao si\");\n    }\n\n    if (me !== null) {\n      configToken = {\n        headers: {\n          Authorization: \"Bearer \" + me.token,\n          UserName: me.username\n        }\n      };\n    }\n  }\n\n  function onFileChangeHandler(e) {\n    if (e.target.files[0]) {\n      if (e.target.files[0].size < 1048576) {\n        e.preventDefault();\n        setSelectedFile(e.target.files[0]);\n        setUploadEnabled(false);\n      } else {\n        alert(\"prevelik fajl\");\n        setSelectedFile(null);\n        setUploadEnabled(true);\n      }\n    }\n  }\n\n  ;\n\n  function sendEmailToken(id) {//   axios.get(emailSendTokenUrl+id).then(console.log(\"mejl poslat\")).catch(function (error) {console.log(\"error:\"+error)});\n    //   sendEmailToken(res.data.id)\n  }\n\n  function handleCertificateIsValid() {//  sendEmailToken(res.data.id)\n    //  setRedirectToEmail(true);\n  }\n\n  function uploadFile() {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    axios.post(certificateUploadUrl, formData, configToken).then(res => res.data ? setRedirectToEmail(true) : alert(\"Your certificate is not valid or is not yours\")).catch(function (error) {\n      if (error.response.status === 403) {\n        alert(\"You are not logged in. Please log in and try again\");\n        setRedirectToLogin(true);\n      } else {\n        alert(\"The error occurred due to server problem or your file is too large\");\n      }\n    });\n  }\n\n  if (redirectToLogin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: loginEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (redirectToEmail) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: emailTokenFrontEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.label,\n          children: \"Upload your certificate :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        size: \"large\",\n        controlid: \"file\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          className: classes.label,\n          children: \"File :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: classes.createInput,\n          autoFocus: true,\n          type: \"file\",\n          onChange: onFileChangeHandler,\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {}\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      block: true,\n      size: \"large\",\n      disabled: uploadEnabled,\n      className: classes.button,\n      onMouseDown: () => uploadFile(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CertificateUploadForm, \"geSXQmSZE6/eW1V8MhoAulVMvKc=\", true);\n\n_c = CertificateUploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CertificateUploadForm\");","map":{"version":3,"sources":["/home/flic/messengerfafront/src/forms/CertificateUploadForm.js"],"names":["React","useState","Form","makeStyles","fade","Button","FormLabel","FormGroup","axios","Link","Navigate","Background","loginUrl","emailSendTokenUrl","emailTokenFrontEnd","certificateUploadUrl","loginEnd","simetricKeyS","cryptoJs","CertificateUploadForm","props","useStyle","theme","root","width","height","textAlign","backgroundPosition","backgroundRepeat","backgroundSize","background","overflowX","backgroundImage","button","marginTop","display","border","color","label","fontSize","fontFamily","padding","alignSelf","fontWeight","textShadow","title","link","paddingLeft","createInput","margine","boxSizing","borderRadius","borderStyle","borderColor","outlineColor","boxShadow","handleSubmit","classes","selectedFile","setSelectedFile","uploadEnabled","setUploadEnabled","redirectToEmail","setRedirectToEmail","redirectToLogin","setRedirectToLogin","me","configToken","localStorage","getItem","bytes","AES","decrypt","JSON","parse","toString","enc","Utf8","error","alert","log","headers","Authorization","token","UserName","username","onFileChangeHandler","e","target","files","size","preventDefault","sendEmailToken","id","handleCertificateIsValid","uploadFile","formData","FormData","append","post","then","res","data","catch","response","status","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport {makeStyles,fade} from \"@material-ui/core/styles\";\nimport {Button,FormLabel,FormGroup} from \"@material-ui/core\"\n//import \"./Universal.css\";\nimport axios from \"axios\";\nimport {Link,Navigate} from \"react-router-dom\";\nimport Background from \"../background.jpg\";\nimport { loginUrl,emailSendTokenUrl,emailTokenFrontEnd, certificateUploadUrl, loginEnd, simetricKeyS} from \"../URLs\";\nimport cryptoJs from \"crypto-js\";\n\n\n\nexport default function CertificateUploadForm(props) {\n\n  const useStyle = makeStyles((theme) =>({\n\n   \n\n     \n   \n    root:\n    {\n      width:\"100%\",\n      height:\"100vh\",\n      textAlign:\"center\",\n      backgroundPosition:\"center\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundSize:\"cover\",\n      background:\"#f7dbcc\",\n      overflowX: \"scroll\",\n      backgroundImage:`URL(${Background})`,\n    },\n    button:\n    {\n      width:\"320px\",\n      marginTop:\"50px\",\n      display:\"relative\",\n      background:\"#e0e047\",\n      border:\"2px solid #ea668e\",\n      color:\"black\",\n      \"&:hover\":{\n          background:fade(\"#e33269\",0.75), \n          border:\"2px solid yellow\",\n          color:\"white\",\n      }\n    },\n    label:\n    {\n      fontSize:\"20px\",\n      fontFamily:\"Lucida Handwriting\",\n      padding: \"10px\",\n      alignSelf:\"center\",\n      color:\"white\",\n      fontWeight:\"bold\",\n      textShadow: \"2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black\",\n    },\n\n    title:\n    {\n      textAlign:\"center\",\n      fontSize:\"30px\",\n      fontFamily:\"Lucida Handwriting\",\n      textShadow: \"2px 0 0 #d2d9db, -2px 0 0 #d2d9db, 0 2px 0 #d2d9db, 0 -2px 0 #d2d9db, 1px 1px #d2d9db, -1px -1px 0 #d2d9db, 1px -1px 0 #d2d9db, -1px 1px 0 #d2d9db\",\n    },\n\n  \n    link:{\n      color:\"yellow\",\n      marginTop:\"10px\",\n      fontSize:\"21px\",\n      paddingLeft:\"10px\",\n      textShadow: \"0 0 5px black\",\n      \"&:hover\":{\n        color:\"#e3f15b\"\n    },\n    },\n    createInput : {\n      margine:\"10 10 10 10\",\n      height:\"150px\",\n      width: \"400px\",\n      fontSize: \"22px\",\n      padding: \"10px\",\n      boxSizing: \"borderBox\",\n      borderRadius: \"3px\",\n      borderStyle:\"dotted\",\n      border: \"solid\",\n      borderColor:\"white\",\n      outlineColor: \"blue\",\n      boxShadow: \"0 2px 4px grey\",\n      alignSelf: \"center\",\n      },\n      \n }))\n\n\n\n  function handleSubmit() \n  {\n   \n  }\n\n \n   const classes=useStyle();\n   let [selectedFile,setSelectedFile]=useState(null);\n   let [uploadEnabled,setUploadEnabled]=useState(true);\n   let [redirectToEmail,setRedirectToEmail]=useState(false);\n   let [redirectToLogin,setRedirectToLogin]=useState(false);\n   let me=null;\n   let configToken=null;\n if(localStorage.getItem(\"user\")!==null)\n {\n   try{\n   var bytes = cryptoJs.AES.decrypt(localStorage.getItem(\"user\"),simetricKeyS);\n   me = JSON.parse(bytes.toString(cryptoJs.enc.Utf8));\n   }\n   catch(error)\n   {\n     alert.log(\"dirao si\");\n  }\n if(me!==null)\n {\n  configToken={ headers: {Authorization:\"Bearer \"+me.token,UserName:me.username}};\n }\n }\n\n   function onFileChangeHandler(e){\n\n    if(e.target.files[0])\n    {\n     if(e.target.files[0].size<1048576)\n     {  \n       e.preventDefault();\n       setSelectedFile(e.target.files[0]);\n       setUploadEnabled(false);\n     }\n     else\n     {\n     alert(\"prevelik fajl\");\n     setSelectedFile(null);\n     setUploadEnabled(true);\n     }\n    }\n    \n    };\n    function sendEmailToken(id)\n    {\n   //   axios.get(emailSendTokenUrl+id).then(console.log(\"mejl poslat\")).catch(function (error) {console.log(\"error:\"+error)});\n   //   sendEmailToken(res.data.id)\n    }\n  \n\n    function handleCertificateIsValid()\n    {\n    //  sendEmailToken(res.data.id)\n    //  setRedirectToEmail(true);\n    }\n\n    function uploadFile()\n    {\n    const formData = new FormData();\n    formData.append('file',selectedFile);\n      axios.post(certificateUploadUrl,formData,configToken).then(res=>(res.data)?setRedirectToEmail(true):alert(\"Your certificate is not valid or is not yours\")).catch(function (error)\n       { \n        if(error.response.status===403)\n        {\n          alert(\"You are not logged in. Please log in and try again\");\n          setRedirectToLogin(true);\n        }\n        else\n        {\n          alert(\"The error occurred due to server problem or your file is too large\");\n        }\n        });\n    }\n\n  if(redirectToLogin)\n  {\n    return <Navigate to={loginEnd}/>\n  }\n  if(redirectToEmail)\n  {\n    return <Navigate to={emailTokenFrontEnd}/>\n  }\n  return (\n   \n    <div className={classes.root}>\n       <Form>\n          <div className={classes.title}>\n      <h1 className={classes.label}>Upload your certificate :</h1>\n            </div>\n        <FormGroup size=\"large\" controlid=\"file\">\n          <FormLabel className={classes.label}>File :</FormLabel>\n          <Form.Control\n            className={classes.createInput}\n            autoFocus\n            type=\"file\"\n            onChange={onFileChangeHandler}\n            onKeyDown={(e)=>{ if(e.key===\"Enter\")\n            {\n            \n            }}}\n          />\n        </FormGroup>\n        </Form>\n        <Button block size=\"large\" disabled={uploadEnabled} className={classes.button} onMouseDown={()=>uploadFile()}>\n          Upload\n      </Button>\n     </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}