[{"/home/flic/messengerfafront/src/index.js":"1","/home/flic/messengerfafront/src/reportWebVitals.js":"2","/home/flic/messengerfafront/src/App.js":"3","/home/flic/messengerfafront/src/forms/Signup.js":"4","/home/flic/messengerfafront/src/components/Chat.js":"5","/home/flic/messengerfafront/src/components/Home.js":"6","/home/flic/messengerfafront/src/forms/Login.js":"7","/home/flic/messengerfafront/src/components/Sidebar.js":"8","/home/flic/messengerfafront/src/components/Message.js":"9","/home/flic/messengerfafront/src/components/SidebarChat.js":"10","/home/flic/messengerfafront/src/URLs.js":"11","/home/flic/messengerfafront/src/forms/ChatInput.js":"12","/home/flic/messengerfafront/src/forms/EmailTokenInput.js":"13","/home/flic/messengerfafront/src/forms/CertificateUploadForm.js":"14"},{"size":500,"mtime":1637333422449,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1636637489313,"results":"17","hashOfConfig":"16"},{"size":1767,"mtime":1638806503081,"results":"18","hashOfConfig":"16"},{"size":6676,"mtime":1638558278644,"results":"19","hashOfConfig":"16"},{"size":5331,"mtime":1638544101210,"results":"20","hashOfConfig":"16"},{"size":4776,"mtime":1638557658974,"results":"21","hashOfConfig":"16"},{"size":5006,"mtime":1638557992599,"results":"22","hashOfConfig":"16"},{"size":4116,"mtime":1638544089682,"results":"23","hashOfConfig":"16"},{"size":1602,"mtime":1638544095290,"results":"24","hashOfConfig":"16"},{"size":1202,"mtime":1638544363935,"results":"25","hashOfConfig":"16"},{"size":1467,"mtime":1638894956751,"results":"26","hashOfConfig":"16"},{"size":1410,"mtime":1637943681519,"results":"27","hashOfConfig":"16"},{"size":4283,"mtime":1638557369937,"results":"28","hashOfConfig":"16"},{"size":4041,"mtime":1638898899570,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1gbjybt",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/flic/messengerfafront/src/index.js",[],["65","66"],"/home/flic/messengerfafront/src/reportWebVitals.js",[],"/home/flic/messengerfafront/src/App.js",["67","68","69","70"],"import React,{useState} from \"react\";\nimport './App.css';\nimport Login from './forms/Login';\nimport Home from './components/Home';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core';\nimport { BrowserRouter as Router,Route,Routes} from \"react-router-dom\";\nimport Signup from \"./forms/Signup\";\nimport EmailTokenInput from \"./forms/EmailTokenInput\";\nimport CertificateUploadForm from \"./forms/CertificateUploadForm\";\n\n\n/*function App() \n{\n\n  const useStyle = makeStyles((theme) =>({\n    app:\n    {\n      display:\"grid\",\n      placeItems:\"center\",\n      backgroundColor:\"#ffdfc9\",\n      height:\"100vh\",\n    },\n    app_body:\n    {\n        display:\"flex\",\n        backgroundColor:\"white\",\n        height:\"90vh\",\n        width:\"90vw\",\n        boxShadow: \"-1px 4px 20px -6px rgba(0,0,0,0.2)\",\n    },\n    }));\n    const classes=useStyle();\n  return (<div className={classes.app}>\n    <div className={classes.app_body}>\n    <Sidebar/>\n    <Chat/>\n    \n\n    </div>\n  \n  </div>\n  \n);\n\n  <Route exect path={`/home/`} element={<Home/>} />\n}*/\nfunction App() \n{\n  let [emailToken,setEmailToken]=useState(sessionStorage.getItem(\"emailTokenStored\"));\n  return (\n    <Router>\n      <Routes>\n      <Route exact path='/' element={<Login/>} />\n      <Route exact path='/signup' element={<Signup/>}/>    \n      <Route exect path={`/home/${emailToken}`} element={<Home/>} />\n      <Route exact path='/login' element={<Login/>} />\n      <Route exact path='/certificate' element={<CertificateUploadForm/>} />\n      <Route exact path='/emailtoken' element={<EmailTokenInput setEmailToken={setEmailToken}/>} />\n    </Routes>\n    </Router>\n  \n);\n}\n\n\nexport default App;\n","/home/flic/messengerfafront/src/forms/Signup.js",["71","72"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport {makeStyles,fade} from \"@material-ui/core/styles\";\nimport {Button,FormLabel,FormGroup} from \"@material-ui/core\"\nimport axios from \"axios\";\nimport Background from \"../background.jpg\";\nimport {loginEnd,signUpUrl} from \"../URLs\";\nimport {Navigate,Link} from \"react-router-dom\";\n\n\n\n\n\nexport default function Signup(props) {\n\n  const useStyle = makeStyles((theme) =>({\n\n   \n\n     \n   \n    root:\n    {\n      width:\"100%\",\n      height:\"100vh\",\n      textAlign:\"center\",\n      backgroundPosition:\"center\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundSize:\"cover\",\n      background:\"\",\n      overflowX: \"scroll\",\n      backgroundImage:`URL(${Background})`,\n    },\n    button:\n    {\n      width:\"320px\",\n      marginTop:\"50px\",\n      display:\"relative\",\n      background:\"#e0e047\",\n      border:\"2px solid #ea668e\",\n      color:\"black\",\n      \"&:hover\":{\n          background:fade(\"#e33269\",0.75), \n          border:\"2px solid yellow\",\n          color:\"white\",\n      }\n    },\n    label:\n    {\n      fontSize:\"20px\",\n      fontFamily:\"Lucida Handwriting\",\n      padding: \"10px\",\n      alignSelf:\"center\",\n      color:\"white\",\n      fontWeight:\"bold\",\n      textShadow: \"2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black\",\n    },\n\n    title:\n    {\n      textAlign:\"center\",\n      fontSize:\"30px\",\n      fontFamily:\"Lucida Handwriting\",\n      textShadow: \"2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black\",\n    },\n\n    link:{\n      color:\"yellow\",\n      marginTop:\"10px\",\n      fontSize:\"21px\",\n      paddingLeft:\"10px\",\n      textShadow: \"0 0 5px black\",\n      \"&:hover\":{\n        color:\"#e3f15b\"\n    },\n    },\n    createInput : {\n      margine:\"10 10 10 10\",\n      width: \"400px\",\n      fontSize: \"22px\",\n      padding: \"10px\",\n      boxSizing: \"borderBox\",\n      borderRadius: \"3px\",\n      border: \"none\",\n      outlineColor: \"blue\",\n      boxShadow: \"0 2px 4px grey\",\n      alignSelf: \"center\",\n      },\n    \n }))\n\n\n  const [userName, setUsername] = useState(\"\");\n  const [passw, setPassword] = useState(\"\");\n  const [repassw,setRePassword]=useState(\"\");\n  const [email,setEmail]=useState(\"\");\n  const [redirect,setRedirect]=useState(false);\n\n\n  function validateForm() {\n    return userName.length > 0 && passw.length > 0 && repassw.length>0 && email.length>0;\n  }\n  function validateEmail()\n  {\n    if (email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/))\n    return true;\n    else\n    {\n    alert(\"Invalid email\");\n    return false;\n    }\n  }\n  function validatePassword()\n  {\n    if(passw===repassw)\n    return true;\n    else\n    {\n      alert(\"Password and confirm password does not match\")\n      return false;\n    }\n  }\n  function validateUsername()\n  {\n    if(userName.match(/^[a-zA-Z0-9_]+$/))\n    {\n      return true;\n    }\n    else\n    {\n      alert(\"Only alphanumeric characters and underscore allowed in USERNAME.\");\n      return false;\n    }\n  }\n  function validate()\n  {\n    return validateEmail() && validatePassword() && validateUsername();\n  }\n\n  function createUser(user)\n  {\n   if(validate())\n   {\n    let user={username:userName,password:passw,email:email,online:0};\n    axios.post(signUpUrl,user).then(()=>{setRedirect(true);}).catch(function (error)\n    {\n      if(error.response.status)\n      {\n        alert(\"This username is already taken. Please choose another name.\");\n      }\n      else\n      alert(\"The error occurred due to server problem.\");\n    });\n  }\n} \n\n  function handleSubmit(event) \n  {\n    \n  }\n\n \n   const classes=useStyle();\n\n  if(redirect)\n  {\n    return <Navigate to={loginEnd}/>\n  }\n\n  return (\n   \n    <div className={classes.root}>\n      \n      <Form onSubmit={handleSubmit}>\n          <div className={classes.title}>\n      <h1 className={classes.label}>Signup :</h1>\n            </div>\n        <FormGroup size=\"large\" controlid=\"username\">\n          <FormLabel className={classes.label}>Username :</FormLabel>\n          <Form.Control\n            className={classes.createInput}\n            autoFocus\n            type=\"username\"\n            value={userName}\n            onChange={(e) => setUsername(e.target.value)}\n            onKeyDown={(e)=>{ if(e.key===\"Enter\")\n            {\n              e.preventDefault();\n              if(validateForm())\n              createUser();\n              else\n              alert(\"Error: all fields are required\");\n            }}}  \n          />\n        </FormGroup>\n        <FormGroup size=\"large\" controlid=\"email\">\n          <FormLabel className={classes.label}>email :</FormLabel>\n          <Form.Control\n            className={classes.createInput}\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            onKeyDown={(e)=>{ if(e.key===\"Enter\")\n            {\n              e.preventDefault();\n              if(validateForm())\n              createUser();\n              else\n              alert(\"Error: all fields are required\");\n            }}}  \n          />\n        </FormGroup>\n        <FormGroup size=\"large\" controlid=\"password\">\n          <FormLabel className={classes.label}>Password :</FormLabel>\n          <Form.Control\n            className={classes.createInput}\n            type=\"password\"\n            value={passw}\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyDown={(e)=>{ if(e.key===\"Enter\")\n            {\n              e.preventDefault();\n              if(validateForm())\n              createUser();\n              else\n              alert(\"Error: all fields are required\");\n            }}}  \n          />\n        </FormGroup> \n        <FormGroup size=\"large\" controlid=\"confirmPassword\">\n          <FormLabel className={classes.label}>Retype Password :</FormLabel>\n          <Form.Control\n            className={classes.createInput}\n            type=\"password\"\n            value={repassw}\n            onChange={(e) => setRePassword(e.target.value)}\n            onKeyDown={(e)=>{ if(e.key===\"Enter\")\n            {\n              e.preventDefault();\n              if(validateForm())\n              createUser();\n              else\n              alert(\"Error: all fields are required\");\n            }}}  \n          />\n        </FormGroup>\n        <Link to={\"/\"} className={classes.link}>Already have an account? Sign in</Link>\n      </Form>\n     \n      <Button block size=\"large\" type=\"submit\" disabled={!validateForm()} className={classes.button} onMouseDown={()=>createUser()}>\n          Create\n      </Button>\n     </div>\n  );\n  }","/home/flic/messengerfafront/src/components/Chat.js",["73","74","75","76","77","78","79","80"],"import React, { useState } from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Avatar,IconButton,InputBase} from '@material-ui/core';\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Message from './Message';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { PermPhoneMsg, StarTwoTone } from '@material-ui/icons';\nimport SockJsClient from \"react-stomp\";\nimport client from 'react-stomp';\nimport { messageUrl, serverWebSocketUrl,topicsUrl } from '../URLs';\nimport ChatInput from '../forms/ChatInput';\nimport axios from \"axios\";\nimport {membersUrl,onlineStatusEnd} from \"../URLs\";\n\nexport default function Chat(props)\n{\n    const useStyle = makeStyles((theme) =>({\n        chat:\n        {\n          flex:\"0.6\",\n          display:\"flex\",\n          flexDirection:\"column\",\n          boxShadow: \"0 2px 4px grey\",\n        },\n        chat_header:\n        {\n            height:\"60px\",\n            display:\"flex\",\n            alignItems:\"center\",\n            background:\"#ff964c\",\n            boxShadow: \"0 2px 4px grey\",\n        },\n        chat_header_avatar:\n        {\n            marginLeft:\"10px\",\n            border:\"2px solid #7f1e00\",\n            color:\"#d16519\",\n            background:\"#ffeecb\",\n        },\n        chat_header_name:\n        {\n            marginLeft:\"10px\",\n            color:\"white\",\n            textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\",\n        },\n        chat_body:\n        {\n            padding:\"30px 10px\",\n            overflowY:\"auto\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            height:\"80%\"\n\n        },\n        chat_footer:\n        {\n           display:\"flex\",\n           flex:\"1\",\n           height:\"7%\",\n           borderTop:\"2px solid grey\",\n        },\n        chat_input:\n        {\n            height:\"60%\",\n            width:\"100%\",\n            border:\"none\",\n            marginLeft:\"10px\",\n            fontSize:\"20px\",\n\n        },\n        chat_form:\n        {\n            display:\"flex\",\n            flex:\"1\",\n            height:\"100px\",\n        },\n        button:\n        {\n            background:\"#ffab6f\",\n            width:\"50px\",\n            height:\"50px\",\n            marginTop: \"5px\",\n            marginBottom: \"5px\",\n            marginLeft: \"5px\",\n            marginRight: \"5px\",\n        },\n        chat_exit:\n        {\n           position:\"relative\",\n           alignSelf:\"right\",\n        }\n    }));\n    const me=JSON.parse(localStorage.getItem(\"user\"));\n    const classes=useStyle();\n    let [messageText,setMessageText]=useState(\"\");\n    const[clientRef,setClientRef]=useState(null);\n    \n  /*  function sendMessage(messagetxt,from)\n    {\n        if(messagetxt!==\"\")\n        {\n        clientRef.sendMessage('/app/user-all', JSON.stringify({  \n            message: messagetxt,\n            name:from\n\n        }));\n        setMessageText(\"\");\n        }\n    }*/\n\n    function sendMessage(messagetxt,from)\n    {\n        if(messagetxt!==\"\")\n        {\n       // let msg={name:me.username,message:messagetxt};  vrati ovo\n       let msg={memberSenderUsername:me.username,text:messagetxt}; //ovo je dodano ako ne radi vrati iznad\n        props.setMessages([...props.messages,msg]);\n      //  clientRef.sendMessage('/app/websocket-chat/'+props.receiver,JSON.stringify({message: messagetxt,name:me.username})); vrati ovo \n      clientRef.sendMessage('/app/websocket-chat/'+props.receiver.username,\n      JSON.stringify({idMemberSender:me.id,idMemberReceiver:props.receiver.id,memberSenderUsername:me.username,memberReceiverUsername:props.receiver.username,text:messagetxt})); //vratio ovo\n        setMessageText(\"\");\n        }\n    }\n\n    function handleOnChange(e)\n    {\n        setMessageText(e.target.value);\n    }\n\n\n\n\n    return (\n        <div className={classes.chat}>\n            <div className={classes.chat_header}>\n            <Avatar className={classes.chat_header_avatar}/>\n            <div className={classes.chat_header_name}>\n                <h2>{props.receiver.username}</h2>\n            </div>\n           \n            </div>\n            <div className={classes.chat_body}>\n            {\n            props.messages.map(msg=> <Message msg={msg}/>)\n            }\n            </div>\n            <div className={classes.chat_footer}> \n                <ChatInput setMessageText={setMessageText} messageText={messageText} sendMessage={sendMessage} handleOnChange={handleOnChange} />\n            </div>\n            \n        <SockJsClient url={serverWebSocketUrl}\n        topics={[topicsUrl+me.username]}\n        onConnect={()=>{\n            console.log(\"Connected\");\n            axios.get(membersUrl+me.id+onlineStatusEnd).then(console.log(\"you are online now\")).catch(function (error)\n            {\n              console.log(error);\n            });}}\n        onDisconnect={()=>{console.log(\"Disconnected\");\n        }}\n\n        onMessage={(msg)=>{\n        //    if(props.receiver===(msg.name))  vrati ovo\n            if(props.receiver.username===(msg.memberSenderUsername))  \n            props.setMessages([...props.messages,msg]);\n            console.log(msg);\n        }}\n\n      \n\n        ref={(client)=>{\n            setClientRef(client);\n        }}>\n        </SockJsClient>\n        </div>\n    );\n}","/home/flic/messengerfafront/src/components/Home.js",["81","82","83"],"import React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Grid } from '@material-ui/core';\nimport Background from \"../background.jpg\";\nimport { loginEnd, membersUrl, messageUrl, offlineStatusEnd, onlineMembersUrl, onlineStatusEnd, sendNoticeOnlineStatusUrl, serverWebSocketUrl } from '../URLs';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport SockJsClient from \"react-stomp\";\n\n\nexport default function Home() \n{\n\n  const useStyle = makeStyles((theme) =>({\n    app:\n    {\n      display:\"grid\",\n      placeItems:\"center\",\n      backgroundColor:\"#ffdfc9\",\n      height:\"100vh\",\n      backgroundSize:\"cover\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundImage:`URL(${Background})`,\n    },\n    app_body:\n    {\n        display:\"flex\",\n        backgroundColor:\"white\",\n        height:\"90vh\",\n        width:\"90vw\",\n        boxShadow: \"-1px 4px 20px -6px rgba(0,0,0,0.2)\",\n    },\n    }));\n    const classes=useStyle();\n  const me=JSON.parse(localStorage.getItem(\"user\"))\n  let [receiver,setReceiver]=useState({});\n  let [redirectToLogin,setRedirectToLogin]=useState(false);\n  let [onlineMembers,setOnlineMembers]=useState([]);\n  const[clientRef2,setClientRef2]=useState(null);\n  let notice={name:\"bye\",message:\"bye\"}\n  let [messages,setMessages]=useState([]);\n\n  React.useEffect(()=>{axios.get(onlineMembersUrl).then(res=>{setOnlineMembers(res.data);console.log(res.data)}).catch(function (error){console.log(error)});},[]);\n  React.useEffect(()=>{axios.get(messageUrl+me.id+\"/\"+((receiver.id===undefined)?\"0\":receiver.id)).then(res=>{setMessages(res.data)}).catch(function (error){console.log(error)});},[]);\n  function logout()\n  { \n    axios.get(membersUrl+me.id+offlineStatusEnd).then(console.log(\"you are online now\")).catch(function (error) //podesi svoj status na offline\n            {\n              console.log(error);\n            });\n    axios.post(sendNoticeOnlineStatusUrl,notice).then(console.log(\"you are offline now\")).catch(function (error) //posalji svima obavjest da si offline\n    {\n      console.log(error);\n    });\n    localStorage.removeItem(\"user\");\n    sessionStorage.removeItem(\"emailTokenStored\");\n    setRedirectToLogin(true);\n  }\n\n  function updateOnline()\n  {\n    axios.get(onlineMembersUrl).then(res=>{setOnlineMembers(res.data);console.log(\"punimo bazu online iz metode\")}).catch(function (error){console.log(error)});\n  }\n\n  function loadMessagesForChat(receiverDirect)\n  {\n    axios.get(messageUrl+me.id+\"/\"+receiverDirect.id).then(res=>{setMessages(res.data)}).catch(function (error){console.log(error)});\n  }\n\n  if(redirectToLogin)\n  {\n    return <Navigate to={loginEnd}/>\n  }\n  return (<div className={classes.app}>\n    <div className={classes.app_body}>\n    <Sidebar setReceiver={setReceiver} logout={logout} onlineMembers={onlineMembers} loadMessagesForChat={loadMessagesForChat}/>\n    <Chat receiver={receiver} messages={messages} setMessages={setMessages}/>\n    <SockJsClient url={serverWebSocketUrl}\n        topics={[\"/topic/user\"]}\n        onConnect={()=>{\n            console.log(\"Socket for online status connected\");\n            axios.get(membersUrl+me.id+onlineStatusEnd).then(console.log(\"you are online now\")).catch(function (error)\n            {\n              console.log(error);\n            })\n            let notice={name:me.username,message:me.usernmae};\n            axios.post(sendNoticeOnlineStatusUrl,notice).then(console.log(\"everybody i am online\")).catch(function (error) //posalji svima obavjest da si offline\n            {\n              console.log(error);\n            });\n            ;}}\n\n        onDisconnect={()=>{console.log(\"Disconnected\");\n        axios.get(membersUrl+me.id+offlineStatusEnd).then(console.log(\"you are offline now\")).catch(function (error)\n        {\n          console.log(error);\n        });\n        axios.post(sendNoticeOnlineStatusUrl,notice).then(console.log(\"everybody i am offline\")).catch(function (error) //posalji svima obavjest da si offline\n        {\n          console.log(error);\n        });\n        }}\n\n        onMessage={(msg)=>{\n          updateOnline();\n        }}\n        onClose={(e)=>{\n          axios.get(membersUrl+me.id+offlineStatusEnd).then(console.log(\"you are offline now\")).catch(function (error)\n          {\n            console.log(error);\n          });\n          axios.post(sendNoticeOnlineStatusUrl,notice).then(console.log(\"everybody i am offline\")).catch(function (error) //posalji svima obavjest da si offline\n          {\n            console.log(error);\n          });\n\n        \n           \n        }}\n\n        ref={(client)=>{\n            setClientRef2(client);\n        }}>\n        </SockJsClient>\n\n    </div>\n  </div>\n  \n);\n}\n\n","/home/flic/messengerfafront/src/forms/Login.js",[],"/home/flic/messengerfafront/src/components/Sidebar.js",["84","85","86","87","88","89","90","91"],"import React, { useState } from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SidebarChat from './SidebarChat';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport { Avatar, IconButton } from '@material-ui/core';\nimport ComputerIcon from \"@material-ui/icons/Computer\";\nimport localIpUrl from 'local-ip-url';\nimport localIpV4Address from 'local-ipv4-address';\nimport {membersEnd,onlineMembersUrl} from \"../URLs\"\nimport axios from 'axios';\n\n\n\nexport default function Sidebar(props)\n{\n    let localIpV4Address=require(\"local-ipv4-address\");\n    const useStyle = makeStyles((theme) =>({\n        sidebar:\n        {\n            flex:\"0.4\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            borderRight:\"3px solid #ecc1a3\",\n            boxShadow: \"0 2px 4px grey\",\n        },\n        sidebar_header:\n        {\n            flex:0.07,\n            height:\"80px\",\n            display:\"flex\",\n            background:\"#ff964c\",\n            boxShadow: \"0 2px 4px grey\", \n        },\n        sidebar_search_input:\n        {\n            display:\"flex\",\n            alignItems:\"center\",\n            padding:\"4px\",\n            borderRadius:\"50px\",\n            backgroundColor:\"#f0f1f1\",\n            marginLeft:\"5px\",\n            marginTop:\"7px\",\n            marginBottom:\"5px\",\n            marginRight:\"20px\",\n            height:\"30px\",\n            width:\"30%\",\n        },\n        sidebar_header_name:\n        {\n            marginLeft:\"10px\",\n            color:\"white\",\n            textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\",\n            fontSize:\"12px\",\n    \n        },\n\n        sidebar_search_icon:\n        {\n            backgroundColor:\"inherit\",\n\n        },\n        sidebar_search_input_field:\n        {\n            border:\"none\",\n            width:\"100%\",\n            backgroundColor:\"inherit\",\n            outline:\"none\",\n\n        },\n        sidebar_chats:\n        {\n            overflowY:\"auto\"\n        },\n        sidebar_exit:\n        {\n            align:\"right\",\n            marginLeft:\"30px\",\n            marginTop:\"3px\",\n            \n        },\n        side_name_all:\n        {\n            display:\"flex\",\n            alignItems:\"center\",\n            marginLeft:\"10px\",\n            color:\"white\",\n            textShadow: \"2px 0 0 #7f1e00, -2px 0 0 #7f1e00, 0 2px 0 #7f1e00, 0 -2px 0 #7f1e00, 1px 1px #7f1e00, -1px -1px 0 #7f1e00, 1px -1px 0 #7f1e00, -1px 1px 0 #7f1e00\",\n            fontSize:\"12px\",\n            width:\"180px\"\n\n        },\n        side_header_avatar:\n        {\n            color:\"#a34d17\",\n        },\n        address:\n        {\n            marginLeft:\"10px\"\n        },\n        name:\n        {\n            marginLeft:\"10px\"\n        }\n    }))\n    const classes=useStyle();\n    const me=JSON.parse(localStorage.getItem(\"user\")).username;\n \n   \n    return(<div className={classes.sidebar}> \n            <div className={classes.sidebar_header}>\n                <div className={classes.sidebar_search_input}>\n                    <SearchIcon className={classes.sidebar_search_icon}/>\n                    <input type=\"text\" className={classes.sidebar_search_input_field} placeholder=\"Search...\"/>\n                </div> \n                <div className={classes.side_name_all}>\n                    <ComputerIcon className={classes.side_header_avatar}/>\n                    <div className={classes.name}>{me}</div>\n                \n                </div>\n                <div className={classes.sidebar_exit}>\n                    <IconButton onMouseDown={()=>props.logout()}>\n                    <ExitToApp/>\n                    </IconButton>\n                </div>\n                \n            </div>\n            <div className={classes.sidebar_chats}>\n            {\n                props.onlineMembers.map(member=><SidebarChat onlineMember={member} setReceiver={props.setReceiver} loadMessagesForChat={props.loadMessagesForChat}/>)\n            }\n            </div>\n\n        </div>\n    );\n}","/home/flic/messengerfafront/src/components/Message.js",[],"/home/flic/messengerfafront/src/components/SidebarChat.js",[],"/home/flic/messengerfafront/src/URLs.js",[],"/home/flic/messengerfafront/src/forms/ChatInput.js",[],"/home/flic/messengerfafront/src/forms/EmailTokenInput.js",["92","93","94","95"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport {makeStyles,fade} from \"@material-ui/core/styles\";\nimport {Button,FormLabel,FormGroup} from \"@material-ui/core\"\n//import \"./Universal.css\";\nimport axios from \"axios\";\nimport {Link,Navigate} from \"react-router-dom\";\nimport Background from \"../background.jpg\";\nimport { loginUrl,homeFrontEnd,emailTokenSubmitUrl,onlineStatusEnd, membersUrl} from \"../URLs\";\n\n\n\nexport default function EmailTokenInput(props) {\n\n  const useStyle = makeStyles((theme) =>({\n\n    root:\n    {\n      width:\"100%\",\n      height:\"100vh\",\n      textAlign:\"center\",\n      backgroundPosition:\"center\",\n      backgroundRepeat:\"no-repeat\",\n      backgroundSize:\"cover\",\n      background:\"#f7dbcc\",\n      overflowX: \"scroll\",\n      backgroundImage:`URL(${Background})`,\n    },\n    button:\n    {\n      width:\"320px\",\n      marginTop:\"50px\",\n      display:\"relative\",\n      background:\"#e0e047\",\n      border:\"2px solid #ea668e\",\n      color:\"black\",\n      \"&:hover\":{\n          background:fade(\"#e33269\",0.75), \n          border:\"2px solid yellow\",\n          color:\"white\",\n      }\n    },\n    label:\n    {\n      fontSize:\"20px\",\n      fontFamily:\"Arial\",\n      padding: \"10px\",\n      alignSelf:\"center\",\n      color:\"white\",\n      fontWeight:\"bold\",\n      textShadow: \"2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black\",\n    },\n    title:\n    {\n      fontSize:\"20px\",\n      fontFamily:\"Lucida Handwriting\",\n      padding: \"10px\",\n      alignSelf:\"center\",\n      color:\"white\",\n      fontWeight:\"bold\",\n      textShadow: \"2px 0 0 black, -2px 0 0 black, 0 2px 0 black, 0 -2px 0 black, 1px 1px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black\",\n    },\n\n  \n    link:{\n      color:\"yellow\",\n      marginTop:\"10px\",\n      fontSize:\"21px\",\n      paddingLeft:\"10px\",\n      textShadow: \"0 0 5px black\",\n      \"&:hover\":{\n        color:\"#e3f15b\"\n    },\n    },\n    createInput : {\n      margine:\"10 10 10 10\",\n      width: \"400px\",\n      fontSize: \"22px\",\n      padding: \"10px\",\n      boxSizing: \"borderBox\",\n      borderRadius: \"3px\",\n      border: \"none\",\n      outlineColor: \"blue\",\n      boxShadow: \"0 2px 4px grey\",\n      alignSelf: \"center\",\n      },\n      \n }))\n\n\n  const [emailToken, setEmailToken] = useState(\"\");\n  const [emailTokenFromDB,setEmailTokenFromDB]=useState(\"\");\n  const [redirectToHome,setRedirectToHome]=useState(false);\n  let userFromStorage=JSON.parse(localStorage.getItem(\"user\"));\n\n  function validateForm() {\n    return emailToken.length > 0;\n  }\n  function handleEmailTokenVerificationAccepted(eToken)\n  { \n    sessionStorage.setItem(\"emailTokenStored\",eToken)\n    props.setEmailToken(eToken);\n    axios.put(membersUrl+userFromStorage.id+onlineStatusEnd,2).then(\"you are online now\").catch(function (error)\n  {\n    console.log(error);\n  });\n    setRedirectToHome(true)\n  }\n  function handleSubmit() \n  {\n    let emailTokenSend={emailToken:emailToken};\n    axios.post(emailTokenSubmitUrl+userFromStorage.id,emailTokenSend).then(res=>{console.log(res.data);(res.data)?handleEmailTokenVerificationAccepted(emailToken):alert(\"Invalid Code.Try Again\")}).catch(function (error)\n    { \n        alert(error); \n    });\n  }\n\n \n   const classes=useStyle();\n\n  if(redirectToHome)\n  {\n    return <Navigate to={homeFrontEnd+sessionStorage.getItem(\"emailTokenStored\")}/>\n  }\n\n  return (\n   \n    <div className={classes.root}>\n      \n      <Form>\n          <div>\n      <h1 className={classes.title}>Token :</h1>\n            </div>\n        <FormGroup size=\"large\" controlid=\"token\">\n          <FormLabel className={classes.label}>Enter the TOKEN you received at your e-mail :</FormLabel>\n          <Form.Control\n            className={classes.createInput}\n            autoFocus\n            value={emailToken}\n            onChange={(e) => setEmailToken(e.target.value)}\n            onKeyDown={(e)=>{ if(e.key===\"Enter\")\n            {\n              e.preventDefault();\n              handleSubmit();\n            }}}\n          />\n        </FormGroup>\n      </Form>\n        <Button block size=\"large\" disabled={!validateForm()} className={classes.button} onMouseDown={()=>handleSubmit()}>\n          VERIFY\n      </Button>\n     </div>\n  );\n}","/home/flic/messengerfafront/src/forms/CertificateUploadForm.js",["96","97","98","99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":15},{"ruleId":"107","severity":1,"message":"111","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":12},{"ruleId":"107","severity":1,"message":"112","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":19},{"ruleId":"107","severity":1,"message":"113","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":105,"column":28,"nodeType":"116","messageId":"117","endLine":105,"endColumn":29,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":105,"column":44,"nodeType":"116","messageId":"117","endLine":105,"endColumn":45,"suggestions":"119"},{"ruleId":"107","severity":1,"message":"120","line":3,"column":17,"nodeType":"109","messageId":"110","endLine":3,"endColumn":27},{"ruleId":"107","severity":1,"message":"121","line":3,"column":28,"nodeType":"109","messageId":"110","endLine":3,"endColumn":37},{"ruleId":"107","severity":1,"message":"122","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},{"ruleId":"107","severity":1,"message":"123","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":17},{"ruleId":"107","severity":1,"message":"124","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":22},{"ruleId":"107","severity":1,"message":"125","line":7,"column":24,"nodeType":"109","messageId":"110","endLine":7,"endColumn":35},{"ruleId":"107","severity":1,"message":"126","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":14},{"ruleId":"107","severity":1,"message":"127","line":10,"column":10,"nodeType":"109","messageId":"110","endLine":10,"endColumn":20},{"ruleId":"107","severity":1,"message":"113","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"128","line":41,"column":9,"nodeType":"109","messageId":"110","endLine":41,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":46,"column":181,"nodeType":"131","endLine":46,"endColumn":183,"suggestions":"132"},{"ruleId":"107","severity":1,"message":"133","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"134","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":16},{"ruleId":"107","severity":1,"message":"135","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":18},{"ruleId":"107","severity":1,"message":"136","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":24},{"ruleId":"107","severity":1,"message":"137","line":10,"column":9,"nodeType":"109","messageId":"110","endLine":10,"endColumn":19},{"ruleId":"107","severity":1,"message":"138","line":10,"column":20,"nodeType":"109","messageId":"110","endLine":10,"endColumn":36},{"ruleId":"107","severity":1,"message":"139","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":13},{"ruleId":"107","severity":1,"message":"140","line":17,"column":9,"nodeType":"109","messageId":"110","endLine":17,"endColumn":25},{"ruleId":"107","severity":1,"message":"141","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"142","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":18},{"ruleId":"107","severity":1,"message":"143","line":92,"column":10,"nodeType":"109","messageId":"110","endLine":92,"endColumn":26},{"ruleId":"107","severity":1,"message":"144","line":92,"column":27,"nodeType":"109","messageId":"110","endLine":92,"endColumn":46},{"ruleId":"107","severity":1,"message":"141","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"145","line":7,"column":14,"nodeType":"109","messageId":"110","endLine":7,"endColumn":22},{"ruleId":"107","severity":1,"message":"142","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":18},{"ruleId":"107","severity":1,"message":"146","line":9,"column":19,"nodeType":"109","messageId":"110","endLine":9,"endColumn":36},{"ruleId":"107","severity":1,"message":"147","line":9,"column":37,"nodeType":"109","messageId":"110","endLine":9,"endColumn":55},{"ruleId":"107","severity":1,"message":"148","line":97,"column":12,"nodeType":"109","messageId":"110","endLine":97,"endColumn":24},{"ruleId":"107","severity":1,"message":"149","line":106,"column":9,"nodeType":"109","messageId":"110","endLine":106,"endColumn":24},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'makeStyles' is defined but never used.","'Grid' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["152","153"],["154","155"],"'IconButton' is defined but never used.","'InputBase' is defined but never used.","'SendIcon' is defined but never used.","'ExitToApp' is defined but never used.","'PermPhoneMsg' is defined but never used.","'StarTwoTone' is defined but never used.","'client' is defined but never used.","'messageUrl' is defined but never used.","'clientRef2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'me.id' and 'receiver.id'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'useState' is defined but never used.","'Avatar' is defined but never used.","'localIpUrl' is defined but never used.","'localIpV4Address' is defined but never used.","'membersEnd' is defined but never used.","'onlineMembersUrl' is defined but never used.","'axios' is defined but never used.","'localIpV4Address' is assigned a value but never used.","'Link' is defined but never used.","'loginUrl' is defined but never used.","'emailTokenFromDB' is assigned a value but never used.","'setEmailTokenFromDB' is assigned a value but never used.","'Navigate' is defined but never used.","'emailSendTokenUrl' is defined but never used.","'emailTokenFrontEnd' is defined but never used.","'handleSubmit' is defined but never used.","'redirectToEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"160","fix":"164","desc":"162"},{"desc":"165","fix":"166"},"removeEscape",{"range":"167","text":"168"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"169","text":"170"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"171","text":"168"},{"range":"172","text":"170"},"Update the dependencies array to be: [me.id, receiver.id]",{"range":"173","text":"174"},[2576,2577],"",[2576,2576],"\\",[2592,2593],[2592,2592],[1739,1741],"[me.id, receiver.id]"]